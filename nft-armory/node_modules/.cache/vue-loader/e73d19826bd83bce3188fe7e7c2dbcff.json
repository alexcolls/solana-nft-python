{"remainingRequest":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/quantium/labs/solana-nft-python/nft-armory/src/components/NFTMintForm.vue?vue&type=script&lang=ts","dependencies":[{"path":"/home/quantium/labs/solana-nft-python/nft-armory/src/components/NFTMintForm.vue","mtime":1666703689733},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/cache-loader/dist/cjs.js","mtime":1666703775764},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/babel-loader/lib/index.js","mtime":1666703776480},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/ts-loader/index.js","mtime":1666703778256},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/cache-loader/dist/cjs.js","mtime":1666703775764},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/vue-loader-v16/dist/index.js","mtime":1666703776480}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IGRlZmluZUNvbXBvbmVudCwgcmVmIH0gZnJvbSAndnVlJzsKaW1wb3J0IHsgUHVibGljS2V5IH0gZnJvbSAnQHNvbGFuYS93ZWIzLmpzJzsKaW1wb3J0IFF1ZXN0aW9uTWFyayBmcm9tICdAL2NvbXBvbmVudHMvUXVlc3Rpb25NYXJrLnZ1ZSc7CmltcG9ydCB7IE5GVE1pbnRFZGl0aW9uRnJvbU1hc3RlciwgTkZUTWludE1hc3RlciB9IGZyb20gJ0AvY29tbW9uL05GVG1pbnQnOwppbXBvcnQgdXNlV2FsbGV0IGZyb20gJ0AvY29tcG9zYWJsZXMvd2FsbGV0JzsKaW1wb3J0IE5vdGlmeVdhcm5pbmcgZnJvbSAnQC9jb21wb25lbnRzL25vdGlmaWNhdGlvbnMvTm90aWZ5V2FybmluZy52dWUnOwppbXBvcnQgTm90aWZ5U3VjY2VzcyBmcm9tICdAL2NvbXBvbmVudHMvbm90aWZpY2F0aW9ucy9Ob3RpZnlTdWNjZXNzLnZ1ZSc7CmltcG9ydCB7IElNaW50UmVzdWx0LCBJTkZUIH0gZnJvbSAnQC9jb21tb24vaGVscGVycy90eXBlcyc7CmltcG9ydCBMb2FkaW5nSWNvbiBmcm9tICdAL2NvbXBvbmVudHMvTG9hZGluZ0ljb24udnVlJzsKaW1wb3J0IE5GVFZpZXdDYXJkIGZyb20gJ0AvY29tcG9uZW50cy9ORlRWaWV3Q2FyZC52dWUnOwppbXBvcnQgeyBORlRHZXQgfSBmcm9tICdAL2NvbW1vbi9ORlRnZXQnOwppbXBvcnQgdXNlTW9kYWwgZnJvbSAnQC9jb21wb3NhYmxlcy9tb2RhbCc7CmltcG9ydCBNb2RhbFdpbmRvdyBmcm9tICdAL2NvbXBvbmVudHMvTW9kYWxXaW5kb3cudnVlJzsKaW1wb3J0IENvbnRlbnRUb29sdGlwQXJ3ZWF2ZSBmcm9tICdAL2NvbXBvbmVudHMvY29udGVudC90b29sdGlwL0NvbnRlbnRUb29sdGlwQXJ3ZWF2ZS52dWUnOwppbXBvcnQgdXNlRXJyb3IgZnJvbSAnQC9jb21wb3NhYmxlcy9lcnJvcic7CmltcG9ydCBFeHBsb3JlckxpbmsgZnJvbSAnQC9jb21wb25lbnRzL0V4cGxvcmVyTGluay52dWUnOwppbXBvcnQgU3RkTm90aWZpY2F0aW9ucyBmcm9tICdAL2NvbXBvbmVudHMvU3RkTm90aWZpY2F0aW9ucy52dWUnOwppbXBvcnQgeyBERUZBVUxUUyB9IGZyb20gJ0AvZ2xvYmFscyc7CgpleHBvcnQgZGVmYXVsdCBkZWZpbmVDb21wb25lbnQoewogIGNvbXBvbmVudHM6IHsKICAgIFN0ZE5vdGlmaWNhdGlvbnMsCiAgICBFeHBsb3JlckxpbmssCiAgICBDb250ZW50VG9vbHRpcEFyd2VhdmUsCiAgICBNb2RhbFdpbmRvdywKICAgIE5GVFZpZXdDYXJkLAogICAgTG9hZGluZ0ljb24sCiAgICBOb3RpZnlTdWNjZXNzLAogICAgTm90aWZ5V2FybmluZywKICAgIFF1ZXN0aW9uTWFyaywKICB9LAogIHNldHVwKCkgewogICAgY29uc3QgeyBpc0Nvbm5lY3RlZCwgZ2V0V2FsbGV0IH0gPSB1c2VXYWxsZXQoKTsKICAgIGNvbnN0IHsgZXJyb3IsIGNsZWFyRXJyb3IsIHNldEVycm9yLCB0cnlDb252ZXJ0VG9QayB9ID0gdXNlRXJyb3IoKTsKCiAgICBjb25zdCBjaG9zZW5ORlRUeXBlID0gcmVmKCdtYXN0ZXInKTsKICAgIGNvbnN0IGlzTG9hZGluZyA9IHJlZjxib29sZWFuPihmYWxzZSk7CiAgICBjb25zdCBtaW50UmVzdWx0ID0gcmVmPElNaW50UmVzdWx0IHwgbnVsbD4obnVsbCk7CiAgICBjb25zdCBuZXdORlQgPSByZWY8SU5GVCB8IG51bGw+KG51bGwpOwoKICAgIGNvbnN0IGNsZWFyUHJldmlvdXNSZXN1bHRzID0gKCkgPT4gewogICAgICBpc0xvYWRpbmcudmFsdWUgPSBmYWxzZTsKICAgICAgbWludFJlc3VsdC52YWx1ZSA9IG51bGw7CiAgICAgIG5ld05GVC52YWx1ZSA9IG51bGw7CiAgICAgIGNsZWFyRXJyb3IoKTsKICAgIH07CgogICAgY29uc3QgZmV0Y2hOZXdORlQgPSBhc3luYyAoKSA9PiB7CiAgICAgIC8vIHRoaXMgd2lsbCBrZWVwIGZhaWxpbmcsIHdoaWxlIHRoZSBuZXR3b3JrIHVwZGF0ZXMsIGZvciBhIHdoaWxlIHNvIGtlZXAgcmV0cnlpbmcKICAgICAgdHJ5IHsKICAgICAgICBbbmV3TkZULnZhbHVlXSA9IGF3YWl0IE5GVEdldCh7IG1pbnQ6IG5ldyBQdWJsaWNLZXkobWludFJlc3VsdC52YWx1ZSEubWludCkgfSk7CiAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICBhd2FpdCBmZXRjaE5ld05GVCgpOwogICAgICB9CiAgICB9OwoKICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBtYXN0ZXIKICAgIGNvbnN0IHVyaSA9IHJlZjxzdHJpbmcgfCBudWxsPihudWxsKTsKICAgIGNvbnN0IG1heFN1cHBseSA9IHJlZjxudW1iZXIgfCBudWxsPihudWxsKTsKICAgIGNvbnN0IG1pbnROZXdNYXN0ZXIgPSBhc3luYyAoKSA9PiB7CiAgICAgIGNsZWFyUHJldmlvdXNSZXN1bHRzKCk7CiAgICAgIGlzTG9hZGluZy52YWx1ZSA9IHRydWU7CiAgICAgIE5GVE1pbnRNYXN0ZXIoZ2V0V2FsbGV0KCkgYXMgYW55LCB1cmkudmFsdWUhLCBtYXhTdXBwbHkudmFsdWUgYXMgYW55KQogICAgICAgIC50aGVuKGFzeW5jIChyZXN1bHQpID0+IHsKICAgICAgICAgIG1pbnRSZXN1bHQudmFsdWUgPSByZXN1bHQgYXMgSU1pbnRSZXN1bHQ7CiAgICAgICAgICBpc0xvYWRpbmcudmFsdWUgPSBmYWxzZTsKICAgICAgICAgIGF3YWl0IGZldGNoTmV3TkZUKCk7CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goKGUpID0+IHsKICAgICAgICAgIHNldEVycm9yKGUpOwogICAgICAgICAgaXNMb2FkaW5nLnZhbHVlID0gZmFsc2U7CiAgICAgICAgfSk7CiAgICB9OwoKICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBwcmludAogICAgY29uc3QgbWFzdGVyRWRpdGlvbk1pbnQgPSByZWY8c3RyaW5nIHwgbnVsbD4obnVsbCk7CiAgICBjb25zdCB1cGRhdGVBdXRob3JpdHkgPSByZWY8c3RyaW5nIHwgbnVsbD4oKTsKCiAgICBjb25zdCBtaW50TmV3UHJpbnQgPSBhc3luYyAoKSA9PiB7CiAgICAgIGNsZWFyUHJldmlvdXNSZXN1bHRzKCk7CiAgICAgIGlzTG9hZGluZy52YWx1ZSA9IHRydWU7CgogICAgICAvLyBpZiBQS3MgZG9uJ3QgZGVzZXJpYWxpemUsIHdlIGRvbid0IHdhbnQgdG8gY2FsbCB0aGUgcmVzdCBvZiB0aGUgZnVuY3Rpb24KICAgICAgY29uc3QgbWFzdGVyUGsgPSB0cnlDb252ZXJ0VG9QayhtYXN0ZXJFZGl0aW9uTWludC52YWx1ZSEpOwogICAgICBjb25zdCB1cGRhdGVQayA9IHRyeUNvbnZlcnRUb1BrKHVwZGF0ZUF1dGhvcml0eS52YWx1ZSEpOwogICAgICBpZiAoZXJyb3IudmFsdWUpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIE5GVE1pbnRFZGl0aW9uRnJvbU1hc3RlcihnZXRXYWxsZXQoKSBhcyBhbnksIG1hc3RlclBrISwgdXBkYXRlUGsgYXMgYW55KQogICAgICAgIC50aGVuKGFzeW5jIChyZXN1bHQpID0+IHsKICAgICAgICAgIG1pbnRSZXN1bHQudmFsdWUgPSByZXN1bHQgYXMgSU1pbnRSZXN1bHQ7CiAgICAgICAgICBpc0xvYWRpbmcudmFsdWUgPSBmYWxzZTsKICAgICAgICAgIGF3YWl0IGZldGNoTmV3TkZUKCk7CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goKGUpID0+IHsKICAgICAgICAgIHNldEVycm9yKGUpOwogICAgICAgICAgaXNMb2FkaW5nLnZhbHVlID0gZmFsc2U7CiAgICAgICAgfSk7CiAgICB9OwoKICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBtb2RhbHMKICAgIGNvbnN0IHsgcmVnaXN0ZXJNb2RhbCwgaXNNb2RhbFZpc2libGUsIHNob3dNb2RhbCwgaGlkZU1vZGFsIH0gPSB1c2VNb2RhbCgpOwogICAgcmVnaXN0ZXJNb2RhbCgndG9vbHRpcEFyd2VhdmUnKTsKCiAgICByZXR1cm4gewogICAgICBERUZBVUxUUywKICAgICAgaXNDb25uZWN0ZWQsCiAgICAgIGVycm9yLAogICAgICBjaG9zZW5ORlRUeXBlLAogICAgICBpc0xvYWRpbmcsCiAgICAgIG1pbnRSZXN1bHQsCiAgICAgIG5ld05GVCwKICAgICAgLy8gbWFzdGVyCiAgICAgIHVyaSwKICAgICAgbWF4U3VwcGx5LAogICAgICBtaW50TmV3TWFzdGVyLAogICAgICAvLyBwcmludAogICAgICBtYXN0ZXJFZGl0aW9uTWludCwKICAgICAgdXBkYXRlQXV0aG9yaXR5LAogICAgICBtaW50TmV3UHJpbnQsCiAgICAgIC8vIG1vZGFsCiAgICAgIGlzTW9kYWxWaXNpYmxlLAogICAgICBzaG93TW9kYWwsCiAgICAgIGhpZGVNb2RhbCwKICAgIH07CiAgfSwKfSk7Cg=="},{"version":3,"sources":["/home/quantium/labs/solana-nft-python/nft-armory/src/components/NFTMintForm.vue"],"names":[],"mappings":";AAoHA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1E,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxtD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtxD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEpC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,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AAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAChD,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;MAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;MACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;UACtB,CAAC,CAAC,CAA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","file":"/home/quantium/labs/solana-nft-python/nft-armory/src/components/NFTMintForm.vue","sourceRoot":"","sourcesContent":["<template>\n  <div>\n    <div class=\"nes-container with-title\">\n      <p class=\"title\">\n        Type of NFT to mint:\n        <QuestionMark external=\"https://docs.metaplex.com/about/terminology#master-edition\" />\n      </p>\n      <div class=\"text-gray-400 mt-2 flex justify-around\">\n        <label>\n          <input type=\"radio\" class=\"nes-radio\" value=\"master\" v-model=\"chosenNFTType\" />\n          <span>Master Edition</span>\n        </label>\n        <label>\n          <input type=\"radio\" class=\"nes-radio\" value=\"print\" v-model=\"chosenNFTType\" />\n          <span>Standard Edition (Print)</span>\n        </label>\n      </div>\n    </div>\n\n    <NotifyWarning class=\"mt-5\" v-if=\"chosenNFTType === 'print'\">\n      (!) Minting Standard Editions requires 1) that you have the Master Edition in your wallet and\n      2) that the max supply cap isn't hit. Read more\n      <a\n        href=\"https://docs.metaplex.com/about/terminology#master-edition\"\n        target=\"_blank\"\n        class=\"nes-text is-primary\"\n        >here</a\n      >.\n    </NotifyWarning>\n\n    <!--master-->\n    <form v-if=\"chosenNFTType === 'master'\" class=\"mt-10\" @submit.prevent=\"mintNewMaster\">\n      <div class=\"nes-field\">\n        <div>\n          <label for=\"uri\">Arweave / IPFS URI:</label\n          ><QuestionMark @click=\"showModal('tooltipArweave')\" />\n        </div>\n        <input type=\"text\" id=\"uri\" class=\"nes-input\" v-model=\"uri\" :placeholder=\"DEFAULTS.URI\" />\n      </div>\n      <div class=\"nes-field mt-5\">\n        <div><label for=\"maxSupply\">Max Supply (leave blank for uncapped):</label></div>\n        <input\n          type=\"number\"\n          id=\"maxSupply\"\n          class=\"nes-input\"\n          v-model=\"maxSupply\"\n          :placeholder=\"DEFAULTS.MAX_SUPPLY\"\n        />\n      </div>\n      <button\n        class=\"nes-btn is-primary mt-5\"\n        :class=\"{ 'is-disabled': isLoading || !isConnected }\"\n        :disabled=\"isLoading || !isConnected\"\n        type=\"submit\"\n      >\n        Mint new Master NFT\n      </button>\n    </form>\n\n    <!--print-->\n    <form v-else-if=\"chosenNFTType === 'print'\" class=\"mt-5\" @submit.prevent=\"mintNewPrint\">\n      <div class=\"nes-field mt-5\">\n        <div><label for=\"masterEditionMint\">Master Edition Mint:</label></div>\n        <input\n          type=\"text\"\n          id=\"masterEditionMint\"\n          class=\"nes-input\"\n          v-model=\"masterEditionMint\"\n          :placeholder=\"DEFAULTS.MASTER_MINT\"\n        />\n      </div>\n      <div class=\"nes-field mt-5\">\n        <div><label for=\"updateAuthority\">Update Authority (leave blank for default):</label></div>\n        <input\n          type=\"text\"\n          id=\"updateAuthority\"\n          class=\"nes-input\"\n          v-model=\"updateAuthority\"\n          :placeholder=\"DEFAULTS.UPDATE_AUTHORITY\"\n        />\n      </div>\n      <button\n        class=\"nes-btn is-primary mt-5\"\n        :class=\"{ 'is-disabled': isLoading || !isConnected }\"\n        :disabled=\"isLoading || !isConnected\"\n        type=\"submit\"\n      >\n        Mint new Print NFT\n      </button>\n    </form>\n\n    <!--notifications-->\n    <StdNotifications :is-connected=\"isConnected\" :is-loading=\"isLoading\" :error=\"error\" />\n    <NotifySuccess v-if=\"mintResult\" class=\"mt-5\">\n      <p>Mint successful! 🎉</p>\n      <LoadingIcon align=\"left\" class=\"mt-5\" v-if=\"!newNFT\"\n        >Loading your new NFT... (might take a min or two)</LoadingIcon\n      >\n      <div v-else>\n        <ExplorerLink :tx-id=\"mintResult.txId\" />\n        <NFTViewCard :n=\"newNFT\" class=\"text-black\" />\n      </div>\n    </NotifySuccess>\n\n    <!--modals-->\n    <ModalWindow\n      v-if=\"isModalVisible('tooltipArweave')\"\n      title=\"What's this URI?\"\n      @hide-modal=\"hideModal('tooltipArweave')\"\n    >\n      <ContentTooltipArweave />\n    </ModalWindow>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref } from 'vue';\nimport { PublicKey } from '@solana/web3.js';\nimport QuestionMark from '@/components/QuestionMark.vue';\nimport { NFTMintEditionFromMaster, NFTMintMaster } from '@/common/NFTmint';\nimport useWallet from '@/composables/wallet';\nimport NotifyWarning from '@/components/notifications/NotifyWarning.vue';\nimport NotifySuccess from '@/components/notifications/NotifySuccess.vue';\nimport { IMintResult, INFT } from '@/common/helpers/types';\nimport LoadingIcon from '@/components/LoadingIcon.vue';\nimport NFTViewCard from '@/components/NFTViewCard.vue';\nimport { NFTGet } from '@/common/NFTget';\nimport useModal from '@/composables/modal';\nimport ModalWindow from '@/components/ModalWindow.vue';\nimport ContentTooltipArweave from '@/components/content/tooltip/ContentTooltipArweave.vue';\nimport useError from '@/composables/error';\nimport ExplorerLink from '@/components/ExplorerLink.vue';\nimport StdNotifications from '@/components/StdNotifications.vue';\nimport { DEFAULTS } from '@/globals';\n\nexport default defineComponent({\n  components: {\n    StdNotifications,\n    ExplorerLink,\n    ContentTooltipArweave,\n    ModalWindow,\n    NFTViewCard,\n    LoadingIcon,\n    NotifySuccess,\n    NotifyWarning,\n    QuestionMark,\n  },\n  setup() {\n    const { isConnected, getWallet } = useWallet();\n    const { error, clearError, setError, tryConvertToPk } = useError();\n\n    const chosenNFTType = ref('master');\n    const isLoading = ref<boolean>(false);\n    const mintResult = ref<IMintResult | null>(null);\n    const newNFT = ref<INFT | null>(null);\n\n    const clearPreviousResults = () => {\n      isLoading.value = false;\n      mintResult.value = null;\n      newNFT.value = null;\n      clearError();\n    };\n\n    const fetchNewNFT = async () => {\n      // this will keep failing, while the network updates, for a while so keep retrying\n      try {\n        [newNFT.value] = await NFTGet({ mint: new PublicKey(mintResult.value!.mint) });\n      } catch (e) {\n        await fetchNewNFT();\n      }\n    };\n\n    // --------------------------------------- master\n    const uri = ref<string | null>(null);\n    const maxSupply = ref<number | null>(null);\n    const mintNewMaster = async () => {\n      clearPreviousResults();\n      isLoading.value = true;\n      NFTMintMaster(getWallet() as any, uri.value!, maxSupply.value as any)\n        .then(async (result) => {\n          mintResult.value = result as IMintResult;\n          isLoading.value = false;\n          await fetchNewNFT();\n        })\n        .catch((e) => {\n          setError(e);\n          isLoading.value = false;\n        });\n    };\n\n    // --------------------------------------- print\n    const masterEditionMint = ref<string | null>(null);\n    const updateAuthority = ref<string | null>();\n\n    const mintNewPrint = async () => {\n      clearPreviousResults();\n      isLoading.value = true;\n\n      // if PKs don't deserialize, we don't want to call the rest of the function\n      const masterPk = tryConvertToPk(masterEditionMint.value!);\n      const updatePk = tryConvertToPk(updateAuthority.value!);\n      if (error.value) {\n        return;\n      }\n\n      NFTMintEditionFromMaster(getWallet() as any, masterPk!, updatePk as any)\n        .then(async (result) => {\n          mintResult.value = result as IMintResult;\n          isLoading.value = false;\n          await fetchNewNFT();\n        })\n        .catch((e) => {\n          setError(e);\n          isLoading.value = false;\n        });\n    };\n\n    // --------------------------------------- modals\n    const { registerModal, isModalVisible, showModal, hideModal } = useModal();\n    registerModal('tooltipArweave');\n\n    return {\n      DEFAULTS,\n      isConnected,\n      error,\n      chosenNFTType,\n      isLoading,\n      mintResult,\n      newNFT,\n      // master\n      uri,\n      maxSupply,\n      mintNewMaster,\n      // print\n      masterEditionMint,\n      updateAuthority,\n      mintNewPrint,\n      // modal\n      isModalVisible,\n      showModal,\n      hideModal,\n    };\n  },\n});\n</script>\n\n<style scoped></style>\n"]}]}