{"remainingRequest":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/quantium/labs/solana-nft-python/nft-armory/src/components/NFTMiscForm.vue?vue&type=template&id=29f165ac&ts=true","dependencies":[{"path":"/home/quantium/labs/solana-nft-python/nft-armory/src/components/NFTMiscForm.vue","mtime":1666703689733},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/cache-loader/dist/cjs.js","mtime":1666703775764},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/babel-loader/lib/index.js","mtime":1666703776480},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/ts-loader/index.js","mtime":1666703778256},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1666703777304},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/cache-loader/dist/cjs.js","mtime":1666703775764},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/vue-loader-v16/dist/index.js","mtime":1666703776480}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdj4KICAgIDxkaXYgY2xhc3M9Im5lcy1jb250YWluZXIgd2l0aC10aXRsZSI+CiAgICAgIDxwIGNsYXNzPSJ0aXRsZSI+Q2hvb3NlIEFjdGlvbjo8L3A+CiAgICAgIDxkaXYgY2xhc3M9InRleHQtZ3JheS00MDAgbXQtMiBmbGV4IGp1c3RpZnktYXJvdW5kIj4KICAgICAgICA8bGFiZWw+CiAgICAgICAgICA8aW5wdXQgdHlwZT0icmFkaW8iIGNsYXNzPSJuZXMtcmFkaW8iIHZhbHVlPSJzaWduTWV0YWRhdGEiIHYtbW9kZWw9ImNob3NlbkFjdGlvbiIgLz4KICAgICAgICAgIDxzcGFuPlNpZ24gTWV0YWRhdGE8L3NwYW4+CiAgICAgICAgPC9sYWJlbD4KICAgICAgICA8bGFiZWw+CiAgICAgICAgICA8aW5wdXQgdHlwZT0icmFkaW8iIGNsYXNzPSJuZXMtcmFkaW8iIHZhbHVlPSJjcmVhdGVNZXRhZGF0YSIgdi1tb2RlbD0iY2hvc2VuQWN0aW9uIiAvPgogICAgICAgICAgPHNwYW4+Q3JlYXRlIE1ldGFkYXRhIFBEQTwvc3Bhbj4KICAgICAgICA8L2xhYmVsPgogICAgICAgIDxsYWJlbD4KICAgICAgICAgIDxpbnB1dCB0eXBlPSJyYWRpbyIgY2xhc3M9Im5lcy1yYWRpbyIgdmFsdWU9ImNyZWF0ZU1hc3RlciIgdi1tb2RlbD0iY2hvc2VuQWN0aW9uIiAvPgogICAgICAgICAgPHNwYW4+Q3JlYXRlIE1hc3RlciBQREE8L3NwYW4+CiAgICAgICAgPC9sYWJlbD4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICA8Tm90aWZ5V2FybmluZwogICAgICBjbGFzcz0ibXQtNSIKICAgICAgdi1pZj0iY2hvc2VuQWN0aW9uID09PSAnY3JlYXRlTWV0YWRhdGEnIHx8IGNob3NlbkFjdGlvbiA9PT0gJ2NyZWF0ZU1hc3RlciciCiAgICA+CiAgICAgICghKSBPbmx5IHVzZSB0aGlzIGlmIHlvdSBrbm93IHdoYXQgeW91J3JlIGRvaW5nLiBJZiBhbGwgeW91IHdhbnQgaXMgdG8gbWludCBhIG5ldyBORlQsIGdvIHRvCiAgICAgIG1pbnQgdGFiLCBhbGwgUERBcyB3aWxsIGJlIGNyZWF0ZWQgZm9yIHlvdS4KICAgIDwvTm90aWZ5V2FybmluZz4KICAgIDxOb3RpZnlXYXJuaW5nIGNsYXNzPSJtdC01IiB2LWlmPSJjaG9zZW5BY3Rpb24gPT09ICdjcmVhdGVNYXN0ZXInIj4KICAgICAgKCEpIFlvdSB3aWxsIG5lZWQgdG8gaGF2ZSBjcmVhdGVkIGEgTWV0YWRhdGEgUERBIGZpcnN0LgogICAgPC9Ob3RpZnlXYXJuaW5nPgoKICAgIDwhLS1zaWduLS0+CiAgICA8Zm9ybSB2LWlmPSJjaG9zZW5BY3Rpb24gPT09ICdzaWduTWV0YWRhdGEnIiBjbGFzcz0ibXQtMTAiIEBzdWJtaXQucHJldmVudD0ic2lnbk1ldGFkYXRhIj4KICAgICAgPGRpdiBjbGFzcz0ibmVzLWZpZWxkIj4KICAgICAgICA8ZGl2PjxsYWJlbCBmb3I9ImVkaXRpb25NaW50Ij5ORlQgTWludDo8L2xhYmVsPjwvZGl2PgogICAgICAgIDxpbnB1dAogICAgICAgICAgdHlwZT0idGV4dCIKICAgICAgICAgIGlkPSJlZGl0aW9uTWludCIKICAgICAgICAgIGNsYXNzPSJuZXMtaW5wdXQiCiAgICAgICAgICB2LW1vZGVsPSJlZGl0aW9uTWludCIKICAgICAgICAgIDpwbGFjZWhvbGRlcj0iREVGQVVMVFMuTUFTVEVSX01JTlQiCiAgICAgICAgLz4KICAgICAgPC9kaXY+CiAgICAgIDxidXR0b24KICAgICAgICBjbGFzcz0ibmVzLWJ0biBpcy1wcmltYXJ5IG10LTUiCiAgICAgICAgOmNsYXNzPSJ7ICdpcy1kaXNhYmxlZCc6IGlzTG9hZGluZyB8fCAhaXNDb25uZWN0ZWQgfSIKICAgICAgICA6ZGlzYWJsZWQ9ImlzTG9hZGluZyB8fCAhaXNDb25uZWN0ZWQiCiAgICAgICAgdHlwZT0ic3VibWl0IgogICAgICA+CiAgICAgICAgU2lnbiBNZXRhZGF0YQogICAgICA8L2J1dHRvbj4KICAgIDwvZm9ybT4KCiAgICA8IS0tY3JlYXRlIG1ldGEtLT4KICAgIDxmb3JtCiAgICAgIHYtZWxzZS1pZj0iY2hvc2VuQWN0aW9uID09PSAnY3JlYXRlTWV0YWRhdGEnIgogICAgICBjbGFzcz0ibXQtNSIKICAgICAgQHN1Ym1pdC5wcmV2ZW50PSJjcmVhdGVNZXRhZGF0YSIKICAgID4KICAgICAgPGRpdiBjbGFzcz0ibmVzLWZpZWxkIj4KICAgICAgICA8ZGl2PgogICAgICAgICAgPGxhYmVsIGZvcj0iZWRpdGlvbk1pbnQyIj5OZXcgU1BMIFRva2VuIE1pbnQ6PC9sYWJlbD4KICAgICAgICAgIDxRdWVzdGlvbk1hcmsgQGNsaWNrPSJzaG93TW9kYWwoJ25mdFRva2VuJykiIC8+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGlucHV0CiAgICAgICAgICB0eXBlPSJ0ZXh0IgogICAgICAgICAgaWQ9ImVkaXRpb25NaW50MiIKICAgICAgICAgIGNsYXNzPSJuZXMtaW5wdXQiCiAgICAgICAgICB2LW1vZGVsPSJlZGl0aW9uTWludCIKICAgICAgICAgIDpwbGFjZWhvbGRlcj0iREVGQVVMVFMuTUFTVEVSX01JTlQiCiAgICAgICAgLz4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9Im5lcy1maWVsZCBtdC01Ij4KICAgICAgICA8ZGl2PgogICAgICAgICAgPGxhYmVsIGZvcj0ibmV3TWV0YWRhdGFEYXRhIj5NZXRhZGF0YSBhcyBKU09OOjwvbGFiZWw+CiAgICAgICAgICA8UXVlc3Rpb25NYXJrIEBjbGljaz0ic2hvd01vZGFsKCd0b29sdGlwTWV0YWRhdGEnKSIgLz4KICAgICAgICA8L2Rpdj4KICAgICAgICA8dGV4dGFyZWEKICAgICAgICAgIHJvd3M9IjUiCiAgICAgICAgICBpZD0ibmV3TWV0YWRhdGFEYXRhIgogICAgICAgICAgY2xhc3M9Im5lcy1pbnB1dCIKICAgICAgICAgIHYtbW9kZWw9Im5ld01ldGFkYXRhRGF0YSIKICAgICAgICAgIDpwbGFjZWhvbGRlcj0iREVGQVVMVFMuTUVUQURBVEEiCiAgICAgICAgPjwvdGV4dGFyZWE+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJuZXMtZmllbGQgbXQtNSI+CiAgICAgICAgPGRpdj48bGFiZWwgZm9yPSJuZXdVcGRhdGVBdXRob3JpdHkiPlVwZGF0ZSBBdXRob3JpdHkgKG9wdGlvbmFsKTo8L2xhYmVsPjwvZGl2PgogICAgICAgIDxpbnB1dAogICAgICAgICAgdHlwZT0idGV4dCIKICAgICAgICAgIGlkPSJuZXdVcGRhdGVBdXRob3JpdHkiCiAgICAgICAgICBjbGFzcz0ibmVzLWlucHV0IgogICAgICAgICAgdi1tb2RlbD0ibmV3VXBkYXRlQXV0aG9yaXR5IgogICAgICAgICAgOnBsYWNlaG9sZGVyPSJERUZBVUxUUy5VUERBVEVfQVVUSE9SSVRZIgogICAgICAgIC8+CiAgICAgIDwvZGl2PgogICAgICA8YnV0dG9uCiAgICAgICAgY2xhc3M9Im5lcy1idG4gaXMtcHJpbWFyeSBtdC01IgogICAgICAgIDpjbGFzcz0ieyAnaXMtZGlzYWJsZWQnOiBpc0xvYWRpbmcgfHwgIWlzQ29ubmVjdGVkIH0iCiAgICAgICAgOmRpc2FibGVkPSJpc0xvYWRpbmcgfHwgIWlzQ29ubmVjdGVkIgogICAgICAgIHR5cGU9InN1Ym1pdCIKICAgICAgPgogICAgICAgIENyZWF0ZSBNZXRhZGF0YSBQREEKICAgICAgPC9idXR0b24+CiAgICA8L2Zvcm0+CgogICAgPCEtLWNyZWF0ZSBtYXN0ZXItLT4KICAgIDxmb3JtIHYtZWxzZS1pZj0iY2hvc2VuQWN0aW9uID09PSAnY3JlYXRlTWFzdGVyJyIgY2xhc3M9Im10LTUiIEBzdWJtaXQucHJldmVudD0iY3JlYXRlTWFzdGVyIj4KICAgICAgPGRpdiBjbGFzcz0ibmVzLWZpZWxkIj4KICAgICAgICA8ZGl2PgogICAgICAgICAgPGxhYmVsIGZvcj0iZWRpdGlvbk1pbnQzIj5OZXcgU1BMIFRva2VuIE1pbnQ6PC9sYWJlbD4KICAgICAgICAgIDxRdWVzdGlvbk1hcmsgQGNsaWNrPSJzaG93TW9kYWwoJ25mdFRva2VuJykiIC8+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGlucHV0CiAgICAgICAgICB0eXBlPSJ0ZXh0IgogICAgICAgICAgaWQ9ImVkaXRpb25NaW50MyIKICAgICAgICAgIGNsYXNzPSJuZXMtaW5wdXQiCiAgICAgICAgICB2LW1vZGVsPSJlZGl0aW9uTWludCIKICAgICAgICAgIDpwbGFjZWhvbGRlcj0iREVGQVVMVFMuTUFTVEVSX01JTlQiCiAgICAgICAgLz4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9Im5lcy1maWVsZCBtdC01Ij4KICAgICAgICA8ZGl2PjxsYWJlbCBmb3I9Im5ld1VwZGF0ZUF1dGhvcml0eTIiPlVwZGF0ZSBBdXRob3JpdHkgKG9wdGlvbmFsKTo8L2xhYmVsPjwvZGl2PgogICAgICAgIDxpbnB1dAogICAgICAgICAgdHlwZT0idGV4dCIKICAgICAgICAgIGlkPSJuZXdVcGRhdGVBdXRob3JpdHkyIgogICAgICAgICAgY2xhc3M9Im5lcy1pbnB1dCIKICAgICAgICAgIHYtbW9kZWw9Im5ld1VwZGF0ZUF1dGhvcml0eSIKICAgICAgICAgIDpwbGFjZWhvbGRlcj0iREVGQVVMVFMuVVBEQVRFX0FVVEhPUklUWSIKICAgICAgICAvPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0ibmVzLWZpZWxkIG10LTUiPgogICAgICAgIDxkaXY+PGxhYmVsIGZvcj0ibWF4U3VwcGx5Ij5NYXggU3VwcGx5IChsZWF2ZSBibGFuayBmb3IgdW5jYXBwZWQpOjwvbGFiZWw+PC9kaXY+CiAgICAgICAgPGlucHV0CiAgICAgICAgICB0eXBlPSJudW1iZXIiCiAgICAgICAgICBpZD0ibWF4U3VwcGx5IgogICAgICAgICAgY2xhc3M9Im5lcy1pbnB1dCIKICAgICAgICAgIHYtbW9kZWw9Im1heFN1cHBseSIKICAgICAgICAgIDpwbGFjZWhvbGRlcj0iREVGQVVMVFMuTUFYX1NVUFBMWSIKICAgICAgICAvPgogICAgICA8L2Rpdj4KICAgICAgPGJ1dHRvbgogICAgICAgIGNsYXNzPSJuZXMtYnRuIGlzLXByaW1hcnkgbXQtNSIKICAgICAgICA6Y2xhc3M9InsgJ2lzLWRpc2FibGVkJzogaXNMb2FkaW5nIHx8ICFpc0Nvbm5lY3RlZCB9IgogICAgICAgIDpkaXNhYmxlZD0iaXNMb2FkaW5nIHx8ICFpc0Nvbm5lY3RlZCIKICAgICAgICB0eXBlPSJzdWJtaXQiCiAgICAgID4KICAgICAgICBDcmVhdGUgTWFzdGVyIFBEQQogICAgICA8L2J1dHRvbj4KICAgIDwvZm9ybT4KCiAgICA8IS0tbm90aWZpY2F0aW9ucy0tPgogICAgPFN0ZE5vdGlmaWNhdGlvbnMgOmlzLWNvbm5lY3RlZD0iaXNDb25uZWN0ZWQiIDppcy1sb2FkaW5nPSJpc0xvYWRpbmciIDplcnJvcj0iZXJyb3IiIC8+CiAgICA8Tm90aWZ5U3VjY2VzcyB2LWlmPSJ0eElkIiBjbGFzcz0ibXQtNSI+CiAgICAgIDxwPkRvbmUhIPCfjok8L3A+CiAgICAgIDxMb2FkaW5nSWNvbiBhbGlnbj0ibGVmdCIgY2xhc3M9Im10LTUiIHYtaWY9IiFjb25maXJtZWQiCiAgICAgICAgPldhaXRpbmcgZm9yIHRyYW5zYWN0aW9uIHRvIGNvbmZpcm0uLi4gKG1pZ2h0IHRha2UgYSBmZXcgc2VjKTwvTG9hZGluZ0ljb24KICAgICAgPgogICAgICA8ZGl2IHYtZWxzZT4KICAgICAgICA8ZGl2IHYtaWY9InBkYSI+TmV3bHkgY3JlYXRlZCBQREE6IHt7IHBkYSB9fTwvZGl2PgogICAgICAgIDxFeHBsb3JlckxpbmsgOnR4LWlkPSJ0eElkIiAvPgogICAgICA8L2Rpdj4KICAgIDwvTm90aWZ5U3VjY2Vzcz4KCiAgICA8IS0tbW9kYWxzLS0+CiAgICA8TW9kYWxXaW5kb3cKICAgICAgdi1pZj0iaXNNb2RhbFZpc2libGUoJ3Rvb2x0aXBNZXRhZGF0YScpIgogICAgICB0aXRsZT0iSG93IHRvIGZvcm1hdCBNZXRhZGF0YT8iCiAgICAgIEBoaWRlLW1vZGFsPSJoaWRlTW9kYWwoJ3Rvb2x0aXBNZXRhZGF0YScpIgogICAgPgogICAgICA8Q29udGVudFRvb2x0aXBNZXRhZGF0YSAvPgogICAgPC9Nb2RhbFdpbmRvdz4KICAgIDxNb2RhbFdpbmRvdwogICAgICB2LWlmPSJpc01vZGFsVmlzaWJsZSgnbmZ0VG9rZW4nKSIKICAgICAgdGl0bGU9IldoYXQgdG9rZW4gaXMgdGhpcz8iCiAgICAgIEBoaWRlLW1vZGFsPSJoaWRlTW9kYWwoJ25mdFRva2VuJykiCiAgICA+CiAgICAgIDxDb250ZW50VG9vbHRpcE5mdFRva2VuIC8+CiAgICA8L01vZGFsV2luZG93PgogIDwvZGl2Pgo="},{"version":3,"sources":["/home/quantium/labs/solana-nft-python/nft-armory/src/components/NFTMiscForm.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC;IACF,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACnC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAClC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACJ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;UACnF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACJ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;UACrF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACJ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;UACnF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACT,CAAC,CAAC,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5E;MACE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;MAC3F,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAChE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACV,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACvF,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CA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AAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACtF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC3E;MACA,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;MAC/B,CAAC,CAAC,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3C;MACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC;MACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/quantium/labs/solana-nft-python/nft-armory/src/components/NFTMiscForm.vue","sourceRoot":"","sourcesContent":["<template>\n  <div>\n    <div class=\"nes-container with-title\">\n      <p class=\"title\">Choose Action:</p>\n      <div class=\"text-gray-400 mt-2 flex justify-around\">\n        <label>\n          <input type=\"radio\" class=\"nes-radio\" value=\"signMetadata\" v-model=\"chosenAction\" />\n          <span>Sign Metadata</span>\n        </label>\n        <label>\n          <input type=\"radio\" class=\"nes-radio\" value=\"createMetadata\" v-model=\"chosenAction\" />\n          <span>Create Metadata PDA</span>\n        </label>\n        <label>\n          <input type=\"radio\" class=\"nes-radio\" value=\"createMaster\" v-model=\"chosenAction\" />\n          <span>Create Master PDA</span>\n        </label>\n      </div>\n    </div>\n\n    <NotifyWarning\n      class=\"mt-5\"\n      v-if=\"chosenAction === 'createMetadata' || chosenAction === 'createMaster'\"\n    >\n      (!) Only use this if you know what you're doing. If all you want is to mint a new NFT, go to\n      mint tab, all PDAs will be created for you.\n    </NotifyWarning>\n    <NotifyWarning class=\"mt-5\" v-if=\"chosenAction === 'createMaster'\">\n      (!) You will need to have created a Metadata PDA first.\n    </NotifyWarning>\n\n    <!--sign-->\n    <form v-if=\"chosenAction === 'signMetadata'\" class=\"mt-10\" @submit.prevent=\"signMetadata\">\n      <div class=\"nes-field\">\n        <div><label for=\"editionMint\">NFT Mint:</label></div>\n        <input\n          type=\"text\"\n          id=\"editionMint\"\n          class=\"nes-input\"\n          v-model=\"editionMint\"\n          :placeholder=\"DEFAULTS.MASTER_MINT\"\n        />\n      </div>\n      <button\n        class=\"nes-btn is-primary mt-5\"\n        :class=\"{ 'is-disabled': isLoading || !isConnected }\"\n        :disabled=\"isLoading || !isConnected\"\n        type=\"submit\"\n      >\n        Sign Metadata\n      </button>\n    </form>\n\n    <!--create meta-->\n    <form\n      v-else-if=\"chosenAction === 'createMetadata'\"\n      class=\"mt-5\"\n      @submit.prevent=\"createMetadata\"\n    >\n      <div class=\"nes-field\">\n        <div>\n          <label for=\"editionMint2\">New SPL Token Mint:</label>\n          <QuestionMark @click=\"showModal('nftToken')\" />\n        </div>\n        <input\n          type=\"text\"\n          id=\"editionMint2\"\n          class=\"nes-input\"\n          v-model=\"editionMint\"\n          :placeholder=\"DEFAULTS.MASTER_MINT\"\n        />\n      </div>\n      <div class=\"nes-field mt-5\">\n        <div>\n          <label for=\"newMetadataData\">Metadata as JSON:</label>\n          <QuestionMark @click=\"showModal('tooltipMetadata')\" />\n        </div>\n        <textarea\n          rows=\"5\"\n          id=\"newMetadataData\"\n          class=\"nes-input\"\n          v-model=\"newMetadataData\"\n          :placeholder=\"DEFAULTS.METADATA\"\n        ></textarea>\n      </div>\n      <div class=\"nes-field mt-5\">\n        <div><label for=\"newUpdateAuthority\">Update Authority (optional):</label></div>\n        <input\n          type=\"text\"\n          id=\"newUpdateAuthority\"\n          class=\"nes-input\"\n          v-model=\"newUpdateAuthority\"\n          :placeholder=\"DEFAULTS.UPDATE_AUTHORITY\"\n        />\n      </div>\n      <button\n        class=\"nes-btn is-primary mt-5\"\n        :class=\"{ 'is-disabled': isLoading || !isConnected }\"\n        :disabled=\"isLoading || !isConnected\"\n        type=\"submit\"\n      >\n        Create Metadata PDA\n      </button>\n    </form>\n\n    <!--create master-->\n    <form v-else-if=\"chosenAction === 'createMaster'\" class=\"mt-5\" @submit.prevent=\"createMaster\">\n      <div class=\"nes-field\">\n        <div>\n          <label for=\"editionMint3\">New SPL Token Mint:</label>\n          <QuestionMark @click=\"showModal('nftToken')\" />\n        </div>\n        <input\n          type=\"text\"\n          id=\"editionMint3\"\n          class=\"nes-input\"\n          v-model=\"editionMint\"\n          :placeholder=\"DEFAULTS.MASTER_MINT\"\n        />\n      </div>\n      <div class=\"nes-field mt-5\">\n        <div><label for=\"newUpdateAuthority2\">Update Authority (optional):</label></div>\n        <input\n          type=\"text\"\n          id=\"newUpdateAuthority2\"\n          class=\"nes-input\"\n          v-model=\"newUpdateAuthority\"\n          :placeholder=\"DEFAULTS.UPDATE_AUTHORITY\"\n        />\n      </div>\n      <div class=\"nes-field mt-5\">\n        <div><label for=\"maxSupply\">Max Supply (leave blank for uncapped):</label></div>\n        <input\n          type=\"number\"\n          id=\"maxSupply\"\n          class=\"nes-input\"\n          v-model=\"maxSupply\"\n          :placeholder=\"DEFAULTS.MAX_SUPPLY\"\n        />\n      </div>\n      <button\n        class=\"nes-btn is-primary mt-5\"\n        :class=\"{ 'is-disabled': isLoading || !isConnected }\"\n        :disabled=\"isLoading || !isConnected\"\n        type=\"submit\"\n      >\n        Create Master PDA\n      </button>\n    </form>\n\n    <!--notifications-->\n    <StdNotifications :is-connected=\"isConnected\" :is-loading=\"isLoading\" :error=\"error\" />\n    <NotifySuccess v-if=\"txId\" class=\"mt-5\">\n      <p>Done! 🎉</p>\n      <LoadingIcon align=\"left\" class=\"mt-5\" v-if=\"!confirmed\"\n        >Waiting for transaction to confirm... (might take a few sec)</LoadingIcon\n      >\n      <div v-else>\n        <div v-if=\"pda\">Newly created PDA: {{ pda }}</div>\n        <ExplorerLink :tx-id=\"txId\" />\n      </div>\n    </NotifySuccess>\n\n    <!--modals-->\n    <ModalWindow\n      v-if=\"isModalVisible('tooltipMetadata')\"\n      title=\"How to format Metadata?\"\n      @hide-modal=\"hideModal('tooltipMetadata')\"\n    >\n      <ContentTooltipMetadata />\n    </ModalWindow>\n    <ModalWindow\n      v-if=\"isModalVisible('nftToken')\"\n      title=\"What token is this?\"\n      @hide-modal=\"hideModal('nftToken')\"\n    >\n      <ContentTooltipNftToken />\n    </ModalWindow>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref } from 'vue';\nimport NotifyWarning from './notifications/NotifyWarning.vue';\nimport StdNotifications from '@/components/StdNotifications.vue';\nimport NotifySuccess from '@/components/notifications/NotifySuccess.vue';\nimport LoadingIcon from '@/components/LoadingIcon.vue';\nimport ExplorerLink from '@/components/ExplorerLink.vue';\nimport ModalWindow from '@/components/ModalWindow.vue';\nimport ContentTooltipMetadata from '@/components/content/tooltip/ContentTooltipMetadata.vue';\nimport useWallet from '@/composables/wallet';\nimport useError from '@/composables/error';\nimport useModal from '@/composables/modal';\nimport QuestionMark from '@/components/QuestionMark.vue';\nimport { NFTSignMetadata } from '@/common/NFTsign';\nimport useCluster from '@/composables/cluster';\nimport { pause } from '@/common/helpers/util';\nimport ContentTooltipNftToken from '@/components/content/tooltip/ContentTooltipNftToken.vue';\nimport { NFTCreateMaster, NFTCreateMetadata } from '@/common/NFTcreate';\nimport { DEFAULTS } from '@/globals';\n\nexport default defineComponent({\n  components: {\n    ContentTooltipNftToken,\n    QuestionMark,\n    ContentTooltipMetadata,\n    ModalWindow,\n    ExplorerLink,\n    LoadingIcon,\n    NotifySuccess,\n    StdNotifications,\n    NotifyWarning,\n  },\n  setup() {\n    const { isConnected, getWallet } = useWallet();\n    const { error, clearError, setError, tryConvertToPk, tryParseJSON, tryParseMetadataData } =\n      useError();\n    const { getConnection } = useCluster();\n\n    const chosenAction = ref<string>('signMetadata');\n    const isLoading = ref<boolean>(false);\n    const txId = ref<string | null>(null);\n    const pda = ref<string | null>(null);\n    const confirmed = ref<boolean>(false);\n\n    const clearPreviousResults = () => {\n      isLoading.value = false;\n      txId.value = null;\n      pda.value = null;\n      confirmed.value = false;\n      clearError();\n    };\n\n    const checkConfirmed = async (sig: string) => {\n      const conn = getConnection('confirmed');\n      const tx = await conn.getConfirmedTransaction(sig);\n      if (!tx) {\n        await pause(1000);\n        await checkConfirmed(sig);\n        return;\n      }\n      confirmed.value = true;\n    };\n\n    // --------------------------------------- sign metadata\n    const editionMint = ref<string | null>(null);\n\n    const signMetadata = async () => {\n      clearPreviousResults();\n      isLoading.value = true;\n\n      const editionPk = tryConvertToPk(editionMint.value);\n      if (error.value) {\n        return;\n      }\n\n      NFTSignMetadata(getWallet() as any, editionPk!)\n        .then(async (result: string) => {\n          txId.value = result;\n          isLoading.value = false;\n          await checkConfirmed(txId.value!);\n        })\n        .catch((e) => {\n          setError(e);\n          isLoading.value = false;\n        });\n    };\n\n    // --------------------------------------- create metadata\n    const newMetadataData = ref<any>(null);\n    const newUpdateAuthority = ref<string | null>(null);\n\n    const createMetadata = async () => {\n      clearPreviousResults();\n      isLoading.value = true;\n\n      const parsedJSON = tryParseJSON(newMetadataData.value);\n      let parsedMetadata;\n      if (parsedJSON) parsedMetadata = tryParseMetadataData(parsedJSON);\n      const editionPk = tryConvertToPk(editionMint.value);\n      const updatePk = tryConvertToPk(newUpdateAuthority.value);\n      if (error.value) {\n        return;\n      }\n\n      NFTCreateMetadata(\n        getWallet() as any,\n        editionPk!,\n        parsedMetadata as any, // null-undefined conflict\n        updatePk as any // null-undefined conflict\n      )\n        .then(async (result: any) => {\n          txId.value = result.txId;\n          pda.value = result.metadata;\n          isLoading.value = false;\n          await checkConfirmed(txId.value!);\n        })\n        .catch((e) => {\n          setError(e);\n          isLoading.value = false;\n        });\n    };\n\n    // --------------------------------------- create master\n    const maxSupply = ref<number | null>(null);\n\n    const createMaster = async () => {\n      clearPreviousResults();\n      isLoading.value = true;\n\n      const editionPk = tryConvertToPk(editionMint.value);\n      const updatePk = tryConvertToPk(newUpdateAuthority.value);\n      if (error.value) {\n        return;\n      }\n\n      NFTCreateMaster(\n        getWallet() as any,\n        editionPk!,\n        updatePk as any, // null-undefined conflict\n        maxSupply.value as any // null-undefined conflict\n      )\n        .then(async (result: any) => {\n          txId.value = result.txId;\n          pda.value = result.edition;\n          isLoading.value = false;\n          await checkConfirmed(txId.value!);\n        })\n        .catch((e) => {\n          setError(e);\n          isLoading.value = false;\n        });\n    };\n\n    // --------------------------------------- modals\n    const { registerModal, isModalVisible, showModal, hideModal } = useModal();\n    registerModal('tooltipMetadata');\n    registerModal('nftToken');\n\n    return {\n      DEFAULTS,\n      isConnected,\n      error,\n      chosenAction,\n      isLoading,\n      txId,\n      pda,\n      confirmed,\n      // sign\n      editionMint,\n      signMetadata,\n      // create metadata\n      newMetadataData,\n      newUpdateAuthority,\n      createMetadata,\n      // create master\n      maxSupply,\n      createMaster,\n      // modal\n      isModalVisible,\n      showModal,\n      hideModal,\n    };\n  },\n});\n</script>\n\n<style scoped></style>\n"]}]}