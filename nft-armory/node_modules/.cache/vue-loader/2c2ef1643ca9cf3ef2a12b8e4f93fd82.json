{"remainingRequest":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/quantium/labs/solana-nft-python/nft-armory/src/components/NFTUpdateForm.vue?vue&type=script&lang=ts","dependencies":[{"path":"/home/quantium/labs/solana-nft-python/nft-armory/src/components/NFTUpdateForm.vue","mtime":1666703689733},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/cache-loader/dist/cjs.js","mtime":1666703775764},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/babel-loader/lib/index.js","mtime":1666703776480},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/ts-loader/index.js","mtime":1666703778256},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/cache-loader/dist/cjs.js","mtime":1666703775764},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/vue-loader-v16/dist/index.js","mtime":1666703776480}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IGRlZmluZUNvbXBvbmVudCwgcmVmIH0gZnJvbSAndnVlJzsKaW1wb3J0IHsgUHVibGljS2V5IH0gZnJvbSAnQHNvbGFuYS93ZWIzLmpzJzsKaW1wb3J0IFF1ZXN0aW9uTWFyayBmcm9tICdAL2NvbXBvbmVudHMvUXVlc3Rpb25NYXJrLnZ1ZSc7CmltcG9ydCBOb3RpZnlTdWNjZXNzIGZyb20gJ0AvY29tcG9uZW50cy9ub3RpZmljYXRpb25zL05vdGlmeVN1Y2Nlc3MudnVlJzsKaW1wb3J0IExvYWRpbmdJY29uIGZyb20gJ0AvY29tcG9uZW50cy9Mb2FkaW5nSWNvbi52dWUnOwppbXBvcnQgTkZUVmlld0NhcmQgZnJvbSAnQC9jb21wb25lbnRzL05GVFZpZXdDYXJkLnZ1ZSc7CmltcG9ydCBNb2RhbFdpbmRvdyBmcm9tICdAL2NvbXBvbmVudHMvTW9kYWxXaW5kb3cudnVlJzsKaW1wb3J0IHVzZVdhbGxldCBmcm9tICdAL2NvbXBvc2FibGVzL3dhbGxldCc7CmltcG9ydCB1c2VFcnJvciBmcm9tICdAL2NvbXBvc2FibGVzL2Vycm9yJzsKaW1wb3J0IHsgSU5GVCB9IGZyb20gJ0AvY29tbW9uL2hlbHBlcnMvdHlwZXMnOwppbXBvcnQgeyBORlRHZXQgfSBmcm9tICdAL2NvbW1vbi9ORlRnZXQnOwppbXBvcnQgeyBORlRVcGRhdGUgfSBmcm9tICdAL2NvbW1vbi9ORlR1cGRhdGUnOwppbXBvcnQgdXNlTW9kYWwgZnJvbSAnQC9jb21wb3NhYmxlcy9tb2RhbCc7CmltcG9ydCBFeHBsb3JlckxpbmsgZnJvbSAnQC9jb21wb25lbnRzL0V4cGxvcmVyTGluay52dWUnOwppbXBvcnQgeyBvYmplY3RPbmVJbnNpZGVPYmplY3RUd28gfSBmcm9tICdAL2NvbW1vbi9oZWxwZXJzL3V0aWwnOwppbXBvcnQgQ29udGVudFRvb2x0aXBNZXRhZGF0YSBmcm9tICdAL2NvbXBvbmVudHMvY29udGVudC90b29sdGlwL0NvbnRlbnRUb29sdGlwTWV0YWRhdGEudnVlJzsKaW1wb3J0IFN0ZE5vdGlmaWNhdGlvbnMgZnJvbSAnQC9jb21wb25lbnRzL1N0ZE5vdGlmaWNhdGlvbnMudnVlJzsKaW1wb3J0IHsgREVGQVVMVFMgfSBmcm9tICdAL2dsb2JhbHMnOwoKZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29tcG9uZW50KHsKICBjb21wb25lbnRzOiB7CiAgICBTdGROb3RpZmljYXRpb25zLAogICAgQ29udGVudFRvb2x0aXBNZXRhZGF0YSwKICAgIEV4cGxvcmVyTGluaywKICAgIE1vZGFsV2luZG93LAogICAgTkZUVmlld0NhcmQsCiAgICBMb2FkaW5nSWNvbiwKICAgIE5vdGlmeVN1Y2Nlc3MsCiAgICBRdWVzdGlvbk1hcmssCiAgfSwKICBzZXR1cCgpIHsKICAgIGNvbnN0IHsgaXNDb25uZWN0ZWQsIGdldFdhbGxldCB9ID0gdXNlV2FsbGV0KCk7CiAgICBjb25zdCB7IGVycm9yLCBjbGVhckVycm9yLCBzZXRFcnJvciwgdHJ5Q29udmVydFRvUGssIHRyeVBhcnNlSlNPTiwgdHJ5UGFyc2VNZXRhZGF0YURhdGEgfSA9CiAgICAgIHVzZUVycm9yKCk7CgogICAgY29uc3QgaXNMb2FkaW5nID0gcmVmPGJvb2xlYW4+KGZhbHNlKTsKICAgIGNvbnN0IHR4SWQgPSByZWY8c3RyaW5nIHwgbnVsbD4obnVsbCk7CiAgICBjb25zdCB1cGRhdGVkTkZUID0gcmVmPElORlQgfCBudWxsPihudWxsKTsKCiAgICBjb25zdCBjbGVhclByZXZpb3VzUmVzdWx0cyA9ICgpID0+IHsKICAgICAgaXNMb2FkaW5nLnZhbHVlID0gZmFsc2U7CiAgICAgIHR4SWQudmFsdWUgPSBudWxsOwogICAgICB1cGRhdGVkTkZULnZhbHVlID0gbnVsbDsKICAgICAgY2xlYXJFcnJvcigpOwogICAgfTsKCiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gdXBkYXRlIG5mdAogICAgY29uc3QgZWRpdGlvbk1pbnQgPSByZWY8c3RyaW5nIHwgbnVsbD4obnVsbCk7CiAgICBjb25zdCBuZXdNZXRhZGF0YURhdGEgPSByZWY8YW55PihudWxsKTsKICAgIGNvbnN0IG5ld1VwZGF0ZUF1dGhvcml0eSA9IHJlZjxzdHJpbmcgfCBudWxsPihudWxsKTsKICAgIGNvbnN0IHByaW1hcnlTYWxlSGFwcGVuZWQgPSByZWY8Ym9vbGVhbiB8IG51bGw+KG51bGwpOwoKICAgIGNvbnN0IGZldGNoVXBkYXRlZE5GVCA9IGFzeW5jICgpOiBQcm9taXNlPHZvaWQ+ID0+IHsKICAgICAgLy8gcmV0cnkgcmVjdXJzaXZlbHkgdW50aWwgbmV3IGF0dHJpYnV0ZXMgY29uZmlybWVkIG9uIHRoZSBuZXR3b3JrCiAgICAgIHRyeSB7CiAgICAgICAgY29uc3QgW2ZldGNoZWRORlRdID0gYXdhaXQgTkZUR2V0KHsgbWludDogbmV3IFB1YmxpY0tleShlZGl0aW9uTWludC52YWx1ZSEpIH0pOwogICAgICAgIC8vIGlmIGFueSBvZiB0aGUgYmVsb3cgY29uZGl0aW9ucyBmYWlsLCB0aGVuIHdlIG5lZWQgdG8gZmV0Y2ggYWdhaW4KICAgICAgICBpZiAoCiAgICAgICAgICAobmV3TWV0YWRhdGFEYXRhLnZhbHVlICYmCiAgICAgICAgICAgICFvYmplY3RPbmVJbnNpZGVPYmplY3RUd28oCiAgICAgICAgICAgICAgdHJ5UGFyc2VNZXRhZGF0YURhdGEodHJ5UGFyc2VKU09OKG5ld01ldGFkYXRhRGF0YS52YWx1ZSkpLAogICAgICAgICAgICAgIGZldGNoZWRORlQubWV0YWRhdGFPbmNoYWluLmRhdGEKICAgICAgICAgICAgKSkgfHwKICAgICAgICAgIChuZXdVcGRhdGVBdXRob3JpdHkudmFsdWUgJiYKICAgICAgICAgICAgbmV3VXBkYXRlQXV0aG9yaXR5LnZhbHVlICE9PSBmZXRjaGVkTkZULm1ldGFkYXRhT25jaGFpbi51cGRhdGVBdXRob3JpdHkpIHx8CiAgICAgICAgICAvLyBwcmltYXJ5IHNhbGUgY2FuIG9ubHkgYmUgc2V0IHRvICJ0cnVlIiA9IHRoZSBvbmx5IHVzZSBjYXNlIHdlJ3JlIGNoZWNraW5nCiAgICAgICAgICAocHJpbWFyeVNhbGVIYXBwZW5lZC52YWx1ZSAmJgogICAgICAgICAgICAoZmV0Y2hlZE5GVC5tZXRhZGF0YU9uY2hhaW4ucHJpbWFyeVNhbGVIYXBwZW5lZCBhcyBhbnkgYXMgbnVtYmVyKSAhPT0gMSkKICAgICAgICApIHsKICAgICAgICAgIHJldHVybiBhd2FpdCBmZXRjaFVwZGF0ZWRORlQoKTsKICAgICAgICB9CgogICAgICAgIHVwZGF0ZWRORlQudmFsdWUgPSBmZXRjaGVkTkZUOwogICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgYXdhaXQgZmV0Y2hVcGRhdGVkTkZUKCk7CiAgICAgIH0KICAgIH07CgogICAgY29uc3QgdXBkYXRlTkZUID0gYXN5bmMgKCkgPT4gewogICAgICBjbGVhclByZXZpb3VzUmVzdWx0cygpOwogICAgICBpc0xvYWRpbmcudmFsdWUgPSB0cnVlOwoKICAgICAgY29uc3QgcGFyc2VkSlNPTiA9IHRyeVBhcnNlSlNPTihuZXdNZXRhZGF0YURhdGEudmFsdWUpOwogICAgICBsZXQgcGFyc2VkTWV0YWRhdGE7CiAgICAgIGlmIChwYXJzZWRKU09OKSBwYXJzZWRNZXRhZGF0YSA9IHRyeVBhcnNlTWV0YWRhdGFEYXRhKHBhcnNlZEpTT04pOwogICAgICBjb25zdCBlZGl0aW9uUGsgPSB0cnlDb252ZXJ0VG9QayhlZGl0aW9uTWludC52YWx1ZSk7CiAgICAgIGNvbnN0IHVwZGF0ZVBrID0gdHJ5Q29udmVydFRvUGsobmV3VXBkYXRlQXV0aG9yaXR5LnZhbHVlKTsKICAgICAgaWYgKGVycm9yLnZhbHVlKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBORlRVcGRhdGUoCiAgICAgICAgZ2V0V2FsbGV0KCkgYXMgYW55LAogICAgICAgIGVkaXRpb25QayEsCiAgICAgICAgcGFyc2VkTWV0YWRhdGEgYXMgYW55LCAvLyBudWxsLXVuZGVmaW5lZCBjb25mbGljdAogICAgICAgIHVwZGF0ZVBrIGFzIGFueSwgLy8gbnVsbC11bmRlZmluZWQgY29uZmxpY3QKICAgICAgICBwcmltYXJ5U2FsZUhhcHBlbmVkLnZhbHVlIGFzIGFueSAvLyBudWxsLXVuZGVmaW5lZCBjb25mbGljdAogICAgICApCiAgICAgICAgLnRoZW4oYXN5bmMgKHJlc3VsdDogc3RyaW5nKSA9PiB7CiAgICAgICAgICB0eElkLnZhbHVlID0gcmVzdWx0OwogICAgICAgICAgaXNMb2FkaW5nLnZhbHVlID0gZmFsc2U7CiAgICAgICAgICBhd2FpdCBmZXRjaFVwZGF0ZWRORlQoKTsKICAgICAgICB9KQogICAgICAgIC5jYXRjaCgoZSkgPT4gewogICAgICAgICAgc2V0RXJyb3IoZSk7CiAgICAgICAgICBpc0xvYWRpbmcudmFsdWUgPSBmYWxzZTsKICAgICAgICB9KTsKICAgIH07CgogICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIG1vZGFscwogICAgY29uc3QgeyByZWdpc3Rlck1vZGFsLCBpc01vZGFsVmlzaWJsZSwgc2hvd01vZGFsLCBoaWRlTW9kYWwgfSA9IHVzZU1vZGFsKCk7CiAgICByZWdpc3Rlck1vZGFsKCd0b29sdGlwTWV0YWRhdGEnKTsKCiAgICByZXR1cm4gewogICAgICBERUZBVUxUUywKICAgICAgaXNDb25uZWN0ZWQsCiAgICAgIGVycm9yLAogICAgICBpc0xvYWRpbmcsCiAgICAgIHR4SWQsCiAgICAgIHVwZGF0ZWRORlQsCiAgICAgIC8vIHVwZGF0ZQogICAgICBlZGl0aW9uTWludCwKICAgICAgbmV3TWV0YWRhdGFEYXRhLAogICAgICBuZXdVcGRhdGVBdXRob3JpdHksCiAgICAgIHByaW1hcnlTYWxlSGFwcGVuZWQsCiAgICAgIHVwZGF0ZU5GVCwKICAgICAgLy8gbW9kYWwKICAgICAgaXNNb2RhbFZpc2libGUsCiAgICAgIHNob3dNb2RhbCwKICAgICAgaGlkZU1vZGFsLAogICAgfTsKICB9LAp9KTsK"},{"version":3,"sources":["/home/quantium/labs/solana-nft-python/nft-armory/src/components/NFTUpdateForm.vue"],"names":[],"mappings":";AAiFA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChhE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEpC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACd,CAAC;EACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACN,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;MACxF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEZ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEzC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE;MACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;MACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;MACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACd,CAAC;;IAED,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACpD,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnD,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAErD,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;MACjD,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACjlE,CAAC,EAAE;UACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACzD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChC,CAAC,EAAE,CAAC;UACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;UAC5E,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAC3E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;QAC3E,EAAE;UACA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChC;;QAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC/B,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;QACV,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACzB;IACF,CAAC;;IAED,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;MAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;;MAEtB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACtD,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAClB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACjE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACnD,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACzD,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACR;;MAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5D;QACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;UAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;UACvB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzB,CAAC;QACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;UACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACzB,CAAC,CAAC;IACN,CAAC;;IAED,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAChhC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;MACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACX,CAAC,CAAC,CAAC,CAAC,CAAC;MACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACT,CAAC,CAAC,CAAC,CAAC;MACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACV,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACT,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC;EACH,CAAC;AACH,CAAC,CAAC","file":"/home/quantium/labs/solana-nft-python/nft-armory/src/components/NFTUpdateForm.vue","sourceRoot":"","sourcesContent":["<template>\n  <div>\n    <form @submit.prevent=\"updateNFT\">\n      <div class=\"nes-field\">\n        <div><label for=\"editionMint\">NFT Mint:</label></div>\n        <input\n          type=\"text\"\n          id=\"editionMint\"\n          class=\"nes-input\"\n          v-model=\"editionMint\"\n          :placeholder=\"DEFAULTS.MASTER_MINT\"\n        />\n      </div>\n      <div class=\"nes-field mt-5\">\n        <div>\n          <label for=\"newMetadataData\">New Metadata as JSON (optional):</label>\n          <QuestionMark @click=\"showModal('tooltipMetadata')\" />\n        </div>\n        <textarea\n          rows=\"5\"\n          id=\"newMetadataData\"\n          class=\"nes-input\"\n          v-model=\"newMetadataData\"\n          :placeholder=\"DEFAULTS.METADATA\"\n        ></textarea>\n      </div>\n      <div class=\"nes-field mt-5\">\n        <div><label for=\"newUpdateAuthority\">New Update Authority (optional):</label></div>\n        <input\n          type=\"text\"\n          id=\"newUpdateAuthority\"\n          class=\"nes-input\"\n          v-model=\"newUpdateAuthority\"\n          :placeholder=\"DEFAULTS.UPDATE_AUTHORITY\"\n        />\n      </div>\n      <div>\n        <label for=\"primarySaleHappened\" class=\"mt-5\">Primary Sale Happened? (optional):</label>\n        <QuestionMark external=\"https://docs.metaplex.com/nft-standard#token-metadata-program\" />\n      </div>\n      <div class=\"nes-select\">\n        <select required id=\"primarySaleHappened\" v-model=\"primarySaleHappened\">\n          <option :value=\"null\">select</option>\n          <option :value=\"true\">yes, it's over</option>\n        </select>\n      </div>\n      <button\n        class=\"nes-btn is-primary mt-5\"\n        :class=\"{ 'is-disabled': isLoading || !isConnected }\"\n        :disabled=\"isLoading || !isConnected\"\n        type=\"submit\"\n      >\n        Update NFT\n      </button>\n    </form>\n\n    <!--notifications-->\n    <StdNotifications :is-connected=\"isConnected\" :is-loading=\"isLoading\" :error=\"error\" />\n    <NotifySuccess v-if=\"txId\" class=\"mt-5\">\n      <p>Update successful! 🎉</p>\n      <LoadingIcon align=\"left\" class=\"mt-5\" v-if=\"!updatedNFT\"\n        >Loading your updated NFT... (might take a min or two)</LoadingIcon\n      >\n      <div v-else>\n        <ExplorerLink :tx-id=\"txId\" />\n        <NFTViewCard :n=\"updatedNFT\" class=\"text-black\" />\n      </div>\n    </NotifySuccess>\n\n    <!--modals-->\n    <ModalWindow\n      v-if=\"isModalVisible('tooltipMetadata')\"\n      title=\"How to format Metadata?\"\n      @hide-modal=\"hideModal('tooltipMetadata')\"\n    >\n      <ContentTooltipMetadata />\n    </ModalWindow>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref } from 'vue';\nimport { PublicKey } from '@solana/web3.js';\nimport QuestionMark from '@/components/QuestionMark.vue';\nimport NotifySuccess from '@/components/notifications/NotifySuccess.vue';\nimport LoadingIcon from '@/components/LoadingIcon.vue';\nimport NFTViewCard from '@/components/NFTViewCard.vue';\nimport ModalWindow from '@/components/ModalWindow.vue';\nimport useWallet from '@/composables/wallet';\nimport useError from '@/composables/error';\nimport { INFT } from '@/common/helpers/types';\nimport { NFTGet } from '@/common/NFTget';\nimport { NFTUpdate } from '@/common/NFTupdate';\nimport useModal from '@/composables/modal';\nimport ExplorerLink from '@/components/ExplorerLink.vue';\nimport { objectOneInsideObjectTwo } from '@/common/helpers/util';\nimport ContentTooltipMetadata from '@/components/content/tooltip/ContentTooltipMetadata.vue';\nimport StdNotifications from '@/components/StdNotifications.vue';\nimport { DEFAULTS } from '@/globals';\n\nexport default defineComponent({\n  components: {\n    StdNotifications,\n    ContentTooltipMetadata,\n    ExplorerLink,\n    ModalWindow,\n    NFTViewCard,\n    LoadingIcon,\n    NotifySuccess,\n    QuestionMark,\n  },\n  setup() {\n    const { isConnected, getWallet } = useWallet();\n    const { error, clearError, setError, tryConvertToPk, tryParseJSON, tryParseMetadataData } =\n      useError();\n\n    const isLoading = ref<boolean>(false);\n    const txId = ref<string | null>(null);\n    const updatedNFT = ref<INFT | null>(null);\n\n    const clearPreviousResults = () => {\n      isLoading.value = false;\n      txId.value = null;\n      updatedNFT.value = null;\n      clearError();\n    };\n\n    // --------------------------------------- update nft\n    const editionMint = ref<string | null>(null);\n    const newMetadataData = ref<any>(null);\n    const newUpdateAuthority = ref<string | null>(null);\n    const primarySaleHappened = ref<boolean | null>(null);\n\n    const fetchUpdatedNFT = async (): Promise<void> => {\n      // retry recursively until new attributes confirmed on the network\n      try {\n        const [fetchedNFT] = await NFTGet({ mint: new PublicKey(editionMint.value!) });\n        // if any of the below conditions fail, then we need to fetch again\n        if (\n          (newMetadataData.value &&\n            !objectOneInsideObjectTwo(\n              tryParseMetadataData(tryParseJSON(newMetadataData.value)),\n              fetchedNFT.metadataOnchain.data\n            )) ||\n          (newUpdateAuthority.value &&\n            newUpdateAuthority.value !== fetchedNFT.metadataOnchain.updateAuthority) ||\n          // primary sale can only be set to \"true\" = the only use case we're checking\n          (primarySaleHappened.value &&\n            (fetchedNFT.metadataOnchain.primarySaleHappened as any as number) !== 1)\n        ) {\n          return await fetchUpdatedNFT();\n        }\n\n        updatedNFT.value = fetchedNFT;\n      } catch (e) {\n        await fetchUpdatedNFT();\n      }\n    };\n\n    const updateNFT = async () => {\n      clearPreviousResults();\n      isLoading.value = true;\n\n      const parsedJSON = tryParseJSON(newMetadataData.value);\n      let parsedMetadata;\n      if (parsedJSON) parsedMetadata = tryParseMetadataData(parsedJSON);\n      const editionPk = tryConvertToPk(editionMint.value);\n      const updatePk = tryConvertToPk(newUpdateAuthority.value);\n      if (error.value) {\n        return;\n      }\n\n      NFTUpdate(\n        getWallet() as any,\n        editionPk!,\n        parsedMetadata as any, // null-undefined conflict\n        updatePk as any, // null-undefined conflict\n        primarySaleHappened.value as any // null-undefined conflict\n      )\n        .then(async (result: string) => {\n          txId.value = result;\n          isLoading.value = false;\n          await fetchUpdatedNFT();\n        })\n        .catch((e) => {\n          setError(e);\n          isLoading.value = false;\n        });\n    };\n\n    // --------------------------------------- modals\n    const { registerModal, isModalVisible, showModal, hideModal } = useModal();\n    registerModal('tooltipMetadata');\n\n    return {\n      DEFAULTS,\n      isConnected,\n      error,\n      isLoading,\n      txId,\n      updatedNFT,\n      // update\n      editionMint,\n      newMetadataData,\n      newUpdateAuthority,\n      primarySaleHappened,\n      updateNFT,\n      // modal\n      isModalVisible,\n      showModal,\n      hideModal,\n    };\n  },\n});\n</script>\n\n<style scoped></style>\n"]}]}