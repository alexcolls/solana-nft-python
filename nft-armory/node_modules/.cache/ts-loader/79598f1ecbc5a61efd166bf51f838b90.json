{"remainingRequest":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/babel-loader/lib/index.js!/home/quantium/labs/solana-nft-python/nft-armory/node_modules/ts-loader/index.js??ref--14-2!/home/quantium/labs/solana-nft-python/nft-armory/src/composables/download.ts","dependencies":[{"path":"/home/quantium/labs/solana-nft-python/nft-armory/src/composables/download.ts","mtime":1666703689733},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/babel.config.js","mtime":1666703689725},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/cache-loader/dist/cjs.js","mtime":1666703775764},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/babel-loader/lib/index.js","mtime":1666703776480},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/ts-loader/index.js","mtime":1666703778256}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmpzb24uc3RyaW5naWZ5LmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIik7CgpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgdmFsdWU6IHRydWUKfSk7Cgp2YXIgdHNsaWJfMSA9IHJlcXVpcmUoInRzbGliIik7Cgp2YXIganN6aXBfMSA9IHRzbGliXzEuX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoImpzemlwIikpOwoKdmFyIGZpbGVfc2F2ZXJfMSA9IHRzbGliXzEuX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoImZpbGUtc2F2ZXIiKSk7Cgp2YXIgdXRpbF8xID0gcmVxdWlyZSgiQC9jb21tb24vaGVscGVycy91dGlsIik7CgpmdW5jdGlvbiB1c2VEb3dubG9hZCgpIHsKICB2YXIgSlNPTlRvQmxvYiA9IGZ1bmN0aW9uIEpTT05Ub0Jsb2IoanNvbkZpbGUpIHsKICAgIHZhciBKU09Oc3RyID0gSlNPTi5zdHJpbmdpZnkodXRpbF8xLnN0cmluZ2lmeVB1YmtleXNBbmRCTnNJbk9iamVjdChqc29uRmlsZSkpOwogICAgdmFyIEpTT05ieXRlcyA9IG5ldyBUZXh0RW5jb2RlcigpLmVuY29kZShKU09Oc3RyKTsKICAgIHJldHVybiBuZXcgQmxvYihbSlNPTmJ5dGVzXSwgewogICAgICB0eXBlOiAnYXBwbGljYXRpb24vanNvbicKICAgIH0pOwogIH07CgogIHZhciBleHBvcnRKU09OWmlwID0gZnVuY3Rpb24gZXhwb3J0SlNPTlppcChqc29uRmlsZXMsIGpzb25BdHRyQXNOYW1lLCB6aXBOYW1lKSB7CiAgICB2YXIgY2FsbGJhY2sgPSBhcmd1bWVudHMubGVuZ3RoID4gMyAmJiBhcmd1bWVudHNbM10gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1szXSA6IG51bGw7CiAgICB2YXIgemlwID0ganN6aXBfMS5kZWZhdWx0KCk7CiAgICBqc29uRmlsZXMubWFwKGZ1bmN0aW9uIChmaWxlKSB7CiAgICAgIHZhciBibG9iID0gSlNPTlRvQmxvYihmaWxlKTsKICAgICAgcmV0dXJuIHppcC5maWxlKCIiLmNvbmNhdChmaWxlW2pzb25BdHRyQXNOYW1lXSwgIi5qc29uIiksIGJsb2IpOwogICAgfSk7CiAgICB6aXAuZ2VuZXJhdGVBc3luYyh7CiAgICAgIHR5cGU6ICdibG9iJwogICAgfSkudGhlbihmdW5jdGlvbiAoemlwRmlsZSkgewogICAgICB2YXIgZmlsZU5hbWUgPSAiIi5jb25jYXQoemlwTmFtZSwgIi56aXAiKTsKICAgICAgZmlsZV9zYXZlcl8xLmRlZmF1bHQuc2F2ZUFzKHppcEZpbGUsIGZpbGVOYW1lKTsKICAgICAgY2FsbGJhY2soKTsKICAgIH0pOwogIH07CgogIHJldHVybiB7CiAgICBKU09OVG9CbG9iOiBKU09OVG9CbG9iLAogICAgZXhwb3J0SlNPTlppcDogZXhwb3J0SlNPTlppcAogIH07Cn0KCmV4cG9ydHMuZGVmYXVsdCA9IHVzZURvd25sb2FkOw=="},{"version":3,"sources":["/home/quantium/labs/solana-nft-python/nft-armory/src/composables/download.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,eAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,eAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;;AAEA,SAAwB,WAAxB,GAAmC;AACjC,MAAM,UAAU,GAAG,SAAb,UAAa,CAAC,QAAD,EAAwB;AACzC,QAAM,OAAO,GAAG,IAAI,CAAC,SAAL,CAAe,MAAA,CAAA,8BAAA,CAA+B,QAA/B,CAAf,CAAhB;AACA,QAAM,SAAS,GAAG,IAAI,WAAJ,GAAkB,MAAlB,CAAyB,OAAzB,CAAlB;AACA,WAAO,IAAI,IAAJ,CAAS,CAAC,SAAD,CAAT,EAAsB;AAAE,MAAA,IAAI,EAAE;AAAR,KAAtB,CAAP;AACD,GAJD;;AAMA,MAAM,aAAa,GAAG,SAAhB,aAAgB,CACpB,SADoB,EAEpB,cAFoB,EAGpB,OAHoB,EAKlB;AAAA,QADF,QACE,uEADc,IACd;AACF,QAAM,GAAG,GAAG,OAAA,CAAA,OAAA,EAAZ;AACA,IAAA,SAAS,CAAC,GAAV,CAAc,UAAC,IAAD,EAAS;AACrB,UAAM,IAAI,GAAG,UAAU,CAAC,IAAD,CAAvB;AACA,aAAO,GAAG,CAAC,IAAJ,WAAY,IAAI,CAAC,cAAD,CAAhB,YAAyC,IAAzC,CAAP;AACD,KAHD;AAIA,IAAA,GAAG,CAAC,aAAJ,CAAkB;AAAE,MAAA,IAAI,EAAE;AAAR,KAAlB,EAAoC,IAApC,CAAyC,UAAC,OAAD,EAAY;AACnD,UAAM,QAAQ,aAAM,OAAN,SAAd;AACA,MAAA,YAAA,CAAA,OAAA,CAAU,MAAV,CAAiB,OAAjB,EAA0B,QAA1B;AACA,MAAA,QAAQ;AACT,KAJD;AAKD,GAhBD;;AAkBA,SAAO;AACL,IAAA,UAAU,EAAV,UADK;AAEL,IAAA,aAAa,EAAb;AAFK,GAAP;AAID;;AA7BD,OAAA,CAAA,OAAA,GAAA,WAAA","sourcesContent":["import JSZip from 'jszip';\nimport FileSaver from 'file-saver';\nimport { stringifyPubkeysAndBNsInObject } from '@/common/helpers/util';\n\nexport default function useDownload() {\n  const JSONToBlob = (jsonFile: any): Blob => {\n    const JSONstr = JSON.stringify(stringifyPubkeysAndBNsInObject(jsonFile));\n    const JSONbytes = new TextEncoder().encode(JSONstr);\n    return new Blob([JSONbytes], { type: 'application/json' });\n  };\n\n  const exportJSONZip = (\n    jsonFiles: any[],\n    jsonAttrAsName: string,\n    zipName: string,\n    callback: any = null\n  ) => {\n    const zip = JSZip();\n    jsonFiles.map((file) => {\n      const blob = JSONToBlob(file);\n      return zip.file(`${file[jsonAttrAsName]}.json`, blob);\n    });\n    zip.generateAsync({ type: 'blob' }).then((zipFile) => {\n      const fileName = `${zipName}.zip`;\n      FileSaver.saveAs(zipFile, fileName);\n      callback();\n    });\n  };\n\n  return {\n    JSONToBlob,\n    exportJSONZip,\n  };\n}\n"],"sourceRoot":""}]}