{"remainingRequest":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/babel-loader/lib/index.js!/home/quantium/labs/solana-nft-python/nft-armory/node_modules/ts-loader/index.js??ref--14-2!/home/quantium/labs/solana-nft-python/nft-armory/src/composables/modal.ts","dependencies":[{"path":"/home/quantium/labs/solana-nft-python/nft-armory/src/composables/modal.ts","mtime":1666703689733},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/babel.config.js","mtime":1666703689725},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/cache-loader/dist/cjs.js","mtime":1666703775764},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/babel-loader/lib/index.js","mtime":1666703776480},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/ts-loader/index.js","mtime":1666703778256}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyIpOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwoKdmFyIHZ1ZV8xID0gcmVxdWlyZSgidnVlIik7CgpmdW5jdGlvbiB1c2VNb2RhbCgpIHsKICB2YXIgbW9kYWxzID0gdnVlXzEucmVmKFtdKTsKCiAgdmFyIHJlZ2lzdGVyTW9kYWwgPSBmdW5jdGlvbiByZWdpc3Rlck1vZGFsKG5hbWUpIHsKICAgIG1vZGFscy52YWx1ZS5wdXNoKHsKICAgICAgbmFtZTogbmFtZSwKICAgICAgdmlzaWJsZTogZmFsc2UKICAgIH0pOwogIH07CgogIHZhciBmaW5kTW9kYWwgPSBmdW5jdGlvbiBmaW5kTW9kYWwobmFtZSkgewogICAgcmV0dXJuIG1vZGFscy52YWx1ZS5maW5kKGZ1bmN0aW9uIChtKSB7CiAgICAgIHJldHVybiBtLm5hbWUgPT09IG5hbWU7CiAgICB9KTsKICB9OwoKICB2YXIgaXNNb2RhbFZpc2libGUgPSBmdW5jdGlvbiBpc01vZGFsVmlzaWJsZShuYW1lKSB7CiAgICB2YXIgbSA9IGZpbmRNb2RhbChuYW1lKTsKICAgIHJldHVybiBtID8gbS52aXNpYmxlIDogdW5kZWZpbmVkOwogIH07CgogIHZhciBzaG93TW9kYWwgPSBmdW5jdGlvbiBzaG93TW9kYWwobmFtZSkgewogICAgdmFyIG0gPSBmaW5kTW9kYWwobmFtZSk7CiAgICBpZiAobSkgbS52aXNpYmxlID0gdHJ1ZTsKICB9OwoKICB2YXIgaGlkZU1vZGFsID0gZnVuY3Rpb24gaGlkZU1vZGFsKG5hbWUpIHsKICAgIHZhciBtID0gZmluZE1vZGFsKG5hbWUpOwogICAgaWYgKG0pIG0udmlzaWJsZSA9IGZhbHNlOwogIH07CgogIHZhciB0b2dnbGVNb2RhbCA9IGZ1bmN0aW9uIHRvZ2dsZU1vZGFsKG5hbWUpIHsKICAgIHZhciBtID0gZmluZE1vZGFsKG5hbWUpOwogICAgaWYgKG0pIG0udmlzaWJsZSA9ICFtLnZpc2libGU7CiAgfTsKCiAgcmV0dXJuIHsKICAgIG1vZGFsczogdnVlXzEucmVhZG9ubHkobW9kYWxzKSwKICAgIHJlZ2lzdGVyTW9kYWw6IHJlZ2lzdGVyTW9kYWwsCiAgICBpc01vZGFsVmlzaWJsZTogaXNNb2RhbFZpc2libGUsCiAgICBzaG93TW9kYWw6IHNob3dNb2RhbCwKICAgIGhpZGVNb2RhbDogaGlkZU1vZGFsLAogICAgdG9nZ2xlTW9kYWw6IHRvZ2dsZU1vZGFsCiAgfTsKfQoKZXhwb3J0cy5kZWZhdWx0ID0gdXNlTW9kYWw7"},{"version":3,"sources":["/home/quantium/labs/solana-nft-python/nft-armory/src/composables/modal.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,OAAA,CAAA,KAAA,CAAA;;AAOA,SAAwB,QAAxB,GAAgC;AAC9B,MAAM,MAAM,GAAG,KAAA,CAAA,GAAA,CAAc,EAAd,CAAf;;AAEA,MAAM,aAAa,GAAG,SAAhB,aAAgB,CAAC,IAAD,EAAiB;AACrC,IAAA,MAAM,CAAC,KAAP,CAAa,IAAb,CAAkB;AAChB,MAAA,IAAI,EAAJ,IADgB;AAEhB,MAAA,OAAO,EAAE;AAFO,KAAlB;AAID,GALD;;AAOA,MAAM,SAAS,GAAG,SAAZ,SAAY,CAAC,IAAD;AAAA,WAAsC,MAAM,CAAC,KAAP,CAAa,IAAb,CAAkB,UAAC,CAAD;AAAA,aAAO,CAAC,CAAC,IAAF,KAAW,IAAlB;AAAA,KAAlB,CAAtC;AAAA,GAAlB;;AAEA,MAAM,cAAc,GAAG,SAAjB,cAAiB,CAAC,IAAD,EAAiB;AACtC,QAAM,CAAC,GAAG,SAAS,CAAC,IAAD,CAAnB;AACA,WAAO,CAAC,GAAG,CAAC,CAAC,OAAL,GAAe,SAAvB;AACD,GAHD;;AAKA,MAAM,SAAS,GAAG,SAAZ,SAAY,CAAC,IAAD,EAAiB;AACjC,QAAM,CAAC,GAAG,SAAS,CAAC,IAAD,CAAnB;AACA,QAAI,CAAJ,EAAO,CAAC,CAAC,OAAF,GAAY,IAAZ;AACR,GAHD;;AAKA,MAAM,SAAS,GAAG,SAAZ,SAAY,CAAC,IAAD,EAAiB;AACjC,QAAM,CAAC,GAAG,SAAS,CAAC,IAAD,CAAnB;AACA,QAAI,CAAJ,EAAO,CAAC,CAAC,OAAF,GAAY,KAAZ;AACR,GAHD;;AAKA,MAAM,WAAW,GAAG,SAAd,WAAc,CAAC,IAAD,EAAiB;AACnC,QAAM,CAAC,GAAG,SAAS,CAAC,IAAD,CAAnB;AACA,QAAI,CAAJ,EAAO,CAAC,CAAC,OAAF,GAAY,CAAC,CAAC,CAAC,OAAf;AACR,GAHD;;AAKA,SAAO;AACL,IAAA,MAAM,EAAE,KAAA,CAAA,QAAA,CAAS,MAAT,CADH;AAEL,IAAA,aAAa,EAAb,aAFK;AAGL,IAAA,cAAc,EAAd,cAHK;AAIL,IAAA,SAAS,EAAT,SAJK;AAKL,IAAA,SAAS,EAAT,SALK;AAML,IAAA,WAAW,EAAX;AANK,GAAP;AAQD;;AAxCD,OAAA,CAAA,OAAA,GAAA,QAAA","sourcesContent":["import { readonly, ref } from 'vue';\n\nexport interface IModal {\n  name: string;\n  visible: boolean;\n}\n\nexport default function useModal() {\n  const modals = ref<IModal[]>([]);\n\n  const registerModal = (name: string) => {\n    modals.value.push({\n      name,\n      visible: false,\n    } as IModal);\n  };\n\n  const findModal = (name: string): IModal | undefined => modals.value.find((m) => m.name === name);\n\n  const isModalVisible = (name: string) => {\n    const m = findModal(name);\n    return m ? m.visible : undefined;\n  };\n\n  const showModal = (name: string) => {\n    const m = findModal(name);\n    if (m) m.visible = true;\n  };\n\n  const hideModal = (name: string) => {\n    const m = findModal(name);\n    if (m) m.visible = false;\n  };\n\n  const toggleModal = (name: string) => {\n    const m = findModal(name);\n    if (m) m.visible = !m.visible;\n  };\n\n  return {\n    modals: readonly(modals),\n    registerModal,\n    isModalVisible,\n    showModal,\n    hideModal,\n    toggleModal,\n  };\n}\n"],"sourceRoot":""}]}