{"remainingRequest":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/babel-loader/lib/index.js!/home/quantium/labs/solana-nft-python/nft-armory/node_modules/ts-loader/index.js??ref--14-2!/home/quantium/labs/solana-nft-python/nft-armory/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/quantium/labs/solana-nft-python/nft-armory/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/quantium/labs/solana-nft-python/nft-armory/src/views/ViewView.vue?vue&type=script&lang=ts","dependencies":[{"path":"/home/quantium/labs/solana-nft-python/nft-armory/src/views/ViewView.vue","mtime":1666703689733},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/babel.config.js","mtime":1666703689725},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/cache-loader/dist/cjs.js","mtime":1666703775764},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/babel-loader/lib/index.js","mtime":1666703776480},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/ts-loader/index.js","mtime":1666703778256},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/cache-loader/dist/cjs.js","mtime":1666703775764},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/vue-loader-v16/dist/index.js","mtime":1666703776480}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/quantium/labs/solana-nft-python/nft-armory/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/quantium/labs/solana-nft-python/nft-armory/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/quantium/labs/solana-nft-python/nft-armory/src/views/ViewView.vue?vue&type=script&lang=ts"],"names":[],"mappings":"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","sourcesContent":["\nimport { computed, defineComponent, ref, watch } from 'vue';\nimport InfiniteLoading from 'vue-infinite-loading';\nimport 'vue-json-pretty/lib/styles.css';\nimport ConfigPane from '@/components/ConfigPane.vue';\nimport LoadingBar from '@/components/LoadingBar.vue';\nimport { NFTGet } from '@/common/NFTget';\nimport NFTViewCard from '@/components/NFTViewCard.vue';\nimport useLoading, { LoadStatus } from '@/composables/loading';\nimport { EE, ERR_NO_NFTS } from '@/globals';\nimport { INFT, INFTParams } from '@/common/helpers/types';\nimport NFTViewForm from '@/components/NFTViewForm.vue';\nimport useDownload from '@/composables/download';\nimport useCopy from '@/composables/copy';\nimport NotifyError from '@/components/notifications/NotifyError.vue';\nimport QuestionMark from '@/components/QuestionMark.vue';\nimport ModalWindow from '@/components/ModalWindow.vue';\nimport ContentTooltipExport from '@/components/content/tooltip/ContentTooltipExport.vue';\nimport useModal from '@/composables/modal';\n\nexport default defineComponent({\n  components: {\n    ContentTooltipExport,\n    ModalWindow,\n    QuestionMark,\n    NotifyError,\n    NFTViewForm,\n    NFTViewCard,\n    LoadingBar,\n    ConfigPane,\n    InfiniteLoading,\n  },\n  setup() {\n    const {\n      progress,\n      text,\n      isLoading,\n      isError,\n      updateLoading,\n      updateLoadingStdErr,\n      updateLoadingStdWin,\n    } = useLoading();\n    const displayedNFTs = ref<INFT[]>([]); // this is what's shown on FE\n    const allFetchedNFTs = ref<INFT[]>([]); // this is everything fetched in mem\n    const fetchParams = ref<INFTParams | null>(null);\n    const NFTCount = computed(() => displayedNFTs.value.length + allFetchedNFTs.value.length);\n\n    const getNextBatch = (size: number): INFT[] => {\n      if (allFetchedNFTs.value.length === 0) {\n        return [];\n      }\n      if (allFetchedNFTs.value.length > size) {\n        return allFetchedNFTs.value.splice(0, size);\n      }\n      return allFetchedNFTs.value.splice(0, allFetchedNFTs.value.length);\n    };\n\n    const fetchNFTs = (params: INFTParams) => {\n      updateLoading({\n        newStatus: LoadStatus.Loading,\n        newProgress: 0,\n        maxProgress: 50,\n        newText: 'Looking for NFTs... ETA: <1 min',\n      });\n\n      EE.removeAllListeners();\n      EE.on('loading', updateLoading);\n\n      // clear for new fetch\n      displayedNFTs.value = [];\n      allFetchedNFTs.value = [];\n\n      NFTGet(params)\n        .then((fetchedNFTs) => {\n          if (fetchedNFTs.length) {\n            allFetchedNFTs.value = fetchedNFTs;\n            const nextBatch = getNextBatch(10);\n            displayedNFTs.value.push(...nextBatch);\n            updateLoadingStdWin();\n          } else {\n            updateLoadingStdErr(ERR_NO_NFTS);\n          }\n        })\n        .catch(updateLoadingStdErr);\n    };\n\n    const handleSubmitForm = (params: INFTParams) => {\n      fetchParams.value = params;\n      fetchNFTs(params);\n    };\n\n    // --------------------------------------- display\n    const infiniteHandler = ($state: any) => {\n      const nextBatch = getNextBatch(10);\n      if (nextBatch.length) {\n        displayedNFTs.value.push(...nextBatch);\n        $state.loaded();\n      } else {\n        $state.complete();\n      }\n    };\n\n    // --------------------------------------- export\n    const { exportJSONZip } = useDownload();\n    const exportBtnText = ref(`Export ${NFTCount.value} NFTs`);\n    const disableExport = ref(false);\n    watch(NFTCount, (newCount) => {\n      exportBtnText.value = `Export ${newCount} NFTs`;\n    });\n\n    const parseParams = (): [string, string] => {\n      let returnKey: string;\n      let returnPk: string;\n      for (const [k, v] of Object.entries(fetchParams.value!)) {\n        if (v && v instanceof Array) {\n          returnKey = k;\n          returnPk = v[0].toBase58(); // get the first creator\n        } else if (v) {\n          returnKey = k;\n          returnPk = v.toBase58();\n        }\n      }\n      return [returnKey!, returnPk!];\n    };\n\n    const doneExportingCallback = () => {\n      disableExport.value = false;\n      exportBtnText.value = `Export ${NFTCount.value} NFTs`;\n    };\n\n    const exportNFTs = () => {\n      disableExport.value = true;\n      exportBtnText.value = 'preparing...';\n      const allNFTs = displayedNFTs.value.concat(allFetchedNFTs.value);\n      const now = +new Date();\n      const [k, v] = parseParams();\n      exportJSONZip(allNFTs, 'mint', `${k}-${v}-${now}`, doneExportingCallback);\n    };\n\n    // --------------------------------------- sharing\n    const { copyText, setCopyText, doCopy } = useCopy();\n    setCopyText('Share Link');\n\n    const copyShareLink = async () => {\n      const host = window.location.origin;\n      if (fetchParams.value!.owner) {\n        await doCopy(`${host}/view/address/${fetchParams.value!.owner.toBase58()}`);\n      } else if (fetchParams.value!.creator) {\n        await doCopy(`${host}/view/creator/${fetchParams.value!.creator.toBase58()}`);\n      } else if (fetchParams.value!.updateAuthority) {\n        await doCopy(`${host}/view/authority/${fetchParams.value!.updateAuthority.toBase58()}`);\n      } else if (fetchParams.value!.mint) {\n        await doCopy(`${host}/view/mint/${fetchParams.value!.mint.toBase58()}`);\n      }\n    };\n\n    // --------------------------------------- modal\n    const { registerModal, isModalVisible, showModal, hideModal } = useModal();\n    registerModal('tooltipExport');\n\n    return {\n      NFTs: displayedNFTs,\n      progress,\n      text,\n      isLoading,\n      isError,\n      exportNFTs,\n      handleSubmitForm,\n      infiniteHandler,\n      // export\n      exportBtnText,\n      disableExport,\n      // share\n      copyText,\n      copyShareLink,\n      doCopy,\n      // modal\n      isModalVisible,\n      showModal,\n      hideModal,\n    };\n  },\n});\n"],"sourceRoot":""}]}