{"remainingRequest":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/babel-loader/lib/index.js!/home/quantium/labs/solana-nft-python/nft-armory/node_modules/ts-loader/index.js??ref--14-2!/home/quantium/labs/solana-nft-python/nft-armory/src/common/helpers/util.ts","dependencies":[{"path":"/home/quantium/labs/solana-nft-python/nft-armory/src/common/helpers/util.ts","mtime":1666703689729},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/babel.config.js","mtime":1666703689725},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/cache-loader/dist/cjs.js","mtime":1666703775764},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/babel-loader/lib/index.js","mtime":1666703776480},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/ts-loader/index.js","mtime":1666703778256}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/quantium/labs/solana-nft-python/nft-armory/src/common/helpers/util.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable no-use-before-define */\n\nimport { PublicKey } from '@solana/web3.js';\nimport fs from 'fs';\nimport BN from 'bn.js';\n\nexport function getEnumKeyByEnumValue(myEnum: any, enumValue: any) {\n  const keys = Object.keys(myEnum).filter((x) => myEnum[x] == enumValue);\n  return keys.length > 0 ? keys[0] : null;\n}\n\n// NOTE: the first array *must* be the longer of the two\nexport function joinArraysOnKey(arr1: any[], arr2: any[], key: string) {\n  const merged = [];\n  for (let i = 0; i < arr1.length; i++) {\n    merged.push({\n      ...arr1[i],\n      ...arr2.find((itmInner) => itmInner[key] === arr1[i][key]),\n    });\n  }\n  return merged;\n}\n\nexport async function okToFailAsync(callback: any, args: any[], wantObject = false) {\n  try {\n    // mandatory await here, can't just pass down (coz we need to catch error in this scope)\n    return await callback(...args);\n  } catch (e) {\n    console.log(`Oh no! ${callback.name} called with ${args} blew up!`);\n    console.log('Full error:', e);\n    return wantObject ? {} : undefined;\n  }\n}\n\nexport function okToFailSync(callback: any, args: any[], wantObject = false) {\n  try {\n    return callback(...args);\n  } catch (e) {\n    console.log(`Oh no! ${callback.name} called with ${args} blew up!`);\n    console.log('Full error:', e);\n    return wantObject ? {} : undefined;\n  }\n}\n\nexport function stringifyPubkeysAndBNsInObject(o: any): any {\n  const newO = { ...o };\n  for (const [k, v] of Object.entries(newO)) {\n    if (v instanceof PublicKey) {\n      newO[k] = v.toBase58();\n    } else if (v instanceof BN) {\n      newO[k] = v.toString();\n    } else if (parseType(v) === 'array') {\n      newO[k] = stringifyPubkeysAndBNInArray(v as any);\n    } else if (parseType(v) === 'dict') {\n      newO[k] = stringifyPubkeysAndBNsInObject(v);\n    } else {\n      newO[k] = v;\n    }\n  }\n  return newO;\n}\n\nexport function stringifyPubkeysAndBNInArray(a: any[]): any[] {\n  const newA = [];\n  for (const i of a) {\n    if (i instanceof PublicKey) {\n      newA.push(i.toBase58());\n    } else if (i instanceof BN) {\n      newA.push(i.toString());\n    } else if (parseType(i) === 'array') {\n      newA.push(stringifyPubkeysAndBNInArray(i));\n    } else if (parseType(i) === 'dict') {\n      newA.push(stringifyPubkeysAndBNsInObject(i));\n    } else {\n      newA.push(i);\n    }\n  }\n  return newA;\n}\n\nexport function parseType<T>(v: T): string {\n  if (v === null || v === undefined) {\n    return 'null';\n  }\n  if (typeof v === 'object') {\n    if (v instanceof Array) {\n      return 'array';\n    }\n    if (v instanceof Date) {\n      return 'date';\n    }\n    return 'dict';\n  }\n  return typeof v;\n}\n\nexport async function writeToDisk(dir: string, arr: any[]) {\n  if (!fs.existsSync(dir)) {\n    fs.mkdirSync(dir);\n  }\n  arr.forEach((i) => {\n    const data = JSON.stringify(i, (k, v) => (v instanceof PublicKey ? v.toBase58() : v), 2);\n    fs.writeFile(`output/nft-${i.mint.toBase58()}.json`, data, (err) => {\n      if (err) {\n        console.log('Write error:', err);\n      }\n    });\n  });\n  console.log('Done writing!');\n}\n\nexport async function pause(ms: number) {\n  // weird semantics - but needed to work inside jest\n  // taken from https://stackoverflow.com/questions/46077176/jest-settimeout-not-pausing-test\n  await new Promise((response) =>\n    setTimeout(() => {\n      console.log(`pausing for ${ms / 1000}s`);\n      response(0);\n    }, ms)\n  );\n}\n\nexport function objectOneInsideObjectTwo(o1: any, o2: any): boolean {\n  const jsonObj1 = { ...o1 };\n  const jsonObj2 = { ...o2 };\n  return Object.keys(jsonObj1).every((k1) => {\n    if (parseType(jsonObj1[k1]) === 'boolean') {\n      jsonObj1[k1] = +jsonObj1[k1];\n    }\n    if (parseType(jsonObj1[k1]) === 'dict') {\n      return objectOneInsideObjectTwo(jsonObj1[k1], jsonObj2[k1]);\n    }\n    if (parseType(jsonObj1[k1]) === 'array') {\n      const results: boolean[] = [];\n      jsonObj1[k1].forEach((o: any, i: number) => {\n        if (parseType(o) === 'boolean') {\n          o = +o;\n        }\n        if (parseType(o) === 'dict') {\n          results.push(objectOneInsideObjectTwo(o, jsonObj2[k1][i]));\n        } else {\n          results.push(o === jsonObj2[k1][i]);\n        }\n      });\n      return results.every((r) => r);\n    }\n    return Object.keys(jsonObj2).some((k2) => {\n      if (parseType(jsonObj2[k2]) === 'boolean') {\n        jsonObj2[k2] = +jsonObj2[k2];\n      }\n      return jsonObj1[k1] === jsonObj2[k2];\n    });\n  });\n}\n\nexport function isIterable(value: any): boolean {\n  return Symbol.iterator in Object(value);\n}\n"],"sourceRoot":""}]}