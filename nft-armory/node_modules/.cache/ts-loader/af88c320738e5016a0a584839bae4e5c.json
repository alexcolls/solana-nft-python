{"remainingRequest":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/babel-loader/lib/index.js!/home/quantium/labs/solana-nft-python/nft-armory/node_modules/ts-loader/index.js??ref--14-2!/home/quantium/labs/solana-nft-python/nft-armory/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/quantium/labs/solana-nft-python/nft-armory/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/quantium/labs/solana-nft-python/nft-armory/src/components/IWantUrNFTForm.vue?vue&type=script&lang=ts","dependencies":[{"path":"/home/quantium/labs/solana-nft-python/nft-armory/src/components/IWantUrNFTForm.vue","mtime":1666703689729},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/babel.config.js","mtime":1666703689725},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/cache-loader/dist/cjs.js","mtime":1666703775764},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/babel-loader/lib/index.js","mtime":1666703776480},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/ts-loader/index.js","mtime":1666703778256},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/cache-loader/dist/cjs.js","mtime":1666703775764},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/vue-loader-v16/dist/index.js","mtime":1666703776480}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/quantium/labs/solana-nft-python/nft-armory/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/quantium/labs/solana-nft-python/nft-armory/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/quantium/labs/solana-nft-python/nft-armory/src/components/IWantUrNFTForm.vue?vue&type=script&lang=ts"],"names":[],"mappings":"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","sourcesContent":["\nimport { defineComponent, ref } from 'vue';\nimport html2canvas from 'html2canvas';\n// @ts-ignore\nimport { PublicKey } from '@solana/web3.js';\nimport usePinata from '@/composables/pinata';\nimport useWallet from '@/composables/wallet';\nimport useError from '@/composables/error';\nimport { IMintResult, INFT } from '@/common/helpers/types';\nimport StdNotifications from '@/components/StdNotifications.vue';\nimport NotifySuccess from '@/components/notifications/NotifySuccess.vue';\nimport LoadingIcon from '@/components/LoadingIcon.vue';\nimport ExplorerLink from '@/components/ExplorerLink.vue';\nimport NFTViewCard from '@/components/NFTViewCard.vue';\nimport ModalWindow from '@/components/ModalWindow.vue';\nimport ContentTooltipIWantUrNFT from '@/components/content/tooltip/ContentTooltipIWantUrNFT.vue';\nimport useModal from '@/composables/modal';\nimport { NFTMintMaster } from '@/common/NFTmint';\nimport { NFTGet } from '@/common/NFTget';\n\nexport default defineComponent({\n  components: {\n    ContentTooltipIWantUrNFT,\n    ModalWindow,\n    NFTViewCard,\n    ExplorerLink,\n    LoadingIcon,\n    NotifySuccess,\n    StdNotifications,\n  },\n  setup() {\n    const { isConnected, getWallet, getWalletAddress } = useWallet();\n    const { error, clearError, setError } = useError();\n\n    const isLoading = ref<boolean>(false);\n    const mintResult = ref<IMintResult | null>(null);\n    const newNFT = ref<INFT | null>(null);\n\n    const clearPreviousResults = () => {\n      isLoading.value = false;\n      mintResult.value = null;\n      newNFT.value = null;\n      clearError();\n    };\n\n    const fetchNewNFT = async () => {\n      // this will keep failing, while the network updates, for a while so keep retrying\n      try {\n        [newNFT.value] = await NFTGet({ mint: new PublicKey(mintResult.value!.mint) });\n      } catch (e) {\n        await fetchNewNFT();\n      }\n    };\n\n    // --------------------------------------- prep metadata\n    const nftName = ref('SMB #1355');\n    const contactDets = ref('on twitter: @myname');\n    const textSize = ref(23);\n\n    const { uploadImg, uploadJSON, hashToURI } = usePinata();\n\n    const generateImg = async () => {\n      const canvas = await html2canvas(document.getElementById('canvas')!);\n      const img = canvas.toDataURL('image/png');\n      const res = await fetch(img);\n      return res.blob();\n    };\n\n    const prepareMetadata = async () => {\n      const img = await generateImg();\n      const imgHash = await uploadImg(img, getWalletAddress()!);\n      const jsonHash = await uploadJSON(imgHash, getWalletAddress()!);\n      return hashToURI(jsonHash);\n    };\n\n    // --------------------------------------- mint newe nft\n    const mintNewMaster = async () => {\n      clearPreviousResults();\n      isLoading.value = true;\n\n      const uri = await prepareMetadata();\n\n      NFTMintMaster(getWallet() as any, uri, 0)\n        .then(async (result) => {\n          mintResult.value = result as IMintResult;\n          isLoading.value = false;\n          await fetchNewNFT();\n        })\n        .catch((e) => {\n          setError(e);\n          isLoading.value = false;\n        });\n    };\n\n    // --------------------------------------- modals\n    const { registerModal, isModalVisible, showModal, hideModal } = useModal();\n    registerModal('tooltipWant');\n\n    return {\n      isConnected,\n      isLoading,\n      mintResult,\n      newNFT,\n      // prep\n      nftName,\n      contactDets,\n      textSize,\n      // mint\n      mintNewMaster,\n      // modals\n      isModalVisible,\n      showModal,\n      hideModal,\n    };\n  },\n});\n"],"sourceRoot":""}]}