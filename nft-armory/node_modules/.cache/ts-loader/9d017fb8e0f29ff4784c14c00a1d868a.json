{"remainingRequest":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/babel-loader/lib/index.js!/home/quantium/labs/solana-nft-python/nft-armory/node_modules/ts-loader/index.js??ref--14-2!/home/quantium/labs/solana-nft-python/nft-armory/src/common/NFTupdate.ts","dependencies":[{"path":"/home/quantium/labs/solana-nft-python/nft-armory/src/common/NFTupdate.ts","mtime":1666703689729},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/babel.config.js","mtime":1666703689725},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/cache-loader/dist/cjs.js","mtime":1666703775764},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/babel-loader/lib/index.js","mtime":1666703776480},{"path":"/home/quantium/labs/solana-nft-python/nft-armory/node_modules/ts-loader/index.js","mtime":1666703778256}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9hc3luY1RvR2VuZXJhdG9yID0gcmVxdWlyZSgiL2hvbWUvcXVhbnRpdW0vbGFicy9zb2xhbmEtbmZ0LXB5dGhvbi9uZnQtYXJtb3J5L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2FzeW5jVG9HZW5lcmF0b3IiKS5kZWZhdWx0OwoKcmVxdWlyZSgicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIik7CgpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgdmFsdWU6IHRydWUKfSk7CmV4cG9ydHMuTkZUVXBkYXRlID0gdm9pZCAwOwoKdmFyIHRzbGliXzEgPSByZXF1aXJlKCJ0c2xpYiIpOwoKdmFyIGpzXzEgPSByZXF1aXJlKCJAbWV0YXBsZXgvanMiKTsKCnZhciBjbHVzdGVyXzEgPSB0c2xpYl8xLl9faW1wb3J0RGVmYXVsdChyZXF1aXJlKCJAL2NvbXBvc2FibGVzL2NsdXN0ZXIiKSk7Cgp2YXIgX2NsdXN0ZXJfMSRkZWZhdWx0ID0gY2x1c3Rlcl8xLmRlZmF1bHQoKSwKICAgIGdldENvbm5lY3Rpb24gPSBfY2x1c3Rlcl8xJGRlZmF1bHQuZ2V0Q29ubmVjdGlvbjsKCmZ1bmN0aW9uIE5GVFVwZGF0ZShfeCwgX3gyLCBfeDMsIF94NCwgX3g1KSB7CiAgcmV0dXJuIF9ORlRVcGRhdGUuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZnVuY3Rpb24gX05GVFVwZGF0ZSgpIHsKICBfTkZUVXBkYXRlID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHdhbGxldCwgZWRpdGlvbk1pbnQsIG5ld01ldGFkYXRhRGF0YSwgbmV3VXBkYXRlQXV0aG9yaXR5LCBwcmltYXJ5U2FsZUhhcHBlbmVkKSB7CiAgICB2YXIgY29ubmVjdGlvbiwgdHhJZDsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgY29ubmVjdGlvbiA9IGdldENvbm5lY3Rpb24oKTsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgIHJldHVybiBqc18xLmFjdGlvbnMudXBkYXRlTWV0YWRhdGEoewogICAgICAgICAgICAgIGNvbm5lY3Rpb246IGNvbm5lY3Rpb24sCiAgICAgICAgICAgICAgd2FsbGV0OiB3YWxsZXQsCiAgICAgICAgICAgICAgZWRpdGlvbk1pbnQ6IGVkaXRpb25NaW50LAogICAgICAgICAgICAgIG5ld01ldGFkYXRhRGF0YTogbmV3TWV0YWRhdGFEYXRhLAogICAgICAgICAgICAgIG5ld1VwZGF0ZUF1dGhvcml0eTogbmV3VXBkYXRlQXV0aG9yaXR5LAogICAgICAgICAgICAgIHByaW1hcnlTYWxlSGFwcGVuZWQ6IHByaW1hcnlTYWxlSGFwcGVuZWQKICAgICAgICAgICAgfSk7CgogICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICB0eElkID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgY29uc29sZS5sb2coJ1VwZGF0ZWQgTkZUOicsIHR4SWQpOwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCB0eElkKTsKCiAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSk7CiAgfSkpOwogIHJldHVybiBfTkZUVXBkYXRlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmV4cG9ydHMuTkZUVXBkYXRlID0gTkZUVXBkYXRlOw=="},{"version":3,"sources":["/home/quantium/labs/solana-nft-python/nft-armory/src/common/NFTupdate.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,IAAA,IAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AAEA,IAAA,SAAA,GAAA,OAAA,CAAA,eAAA,CAAA,OAAA,CAAA,uBAAA,CAAA,CAAA;;AAEA,yBAA0B,SAAA,CAAA,OAAA,EAA1B;AAAA,IAAQ,aAAR,sBAAQ,aAAR;;SAEsB,S;;;;;uEAAf,iBACL,MADK,EAEL,WAFK,EAGL,eAHK,EAIL,kBAJK,EAKL,mBALK;AAAA;AAAA;AAAA;AAAA;AAAA;AAOC,YAAA,UAPD,GAOc,aAAa,EAP3B;AAAA;AAAA,mBAQc,IAAA,CAAA,OAAA,CAAQ,cAAR,CAAuB;AACxC,cAAA,UAAU,EAAV,UADwC;AAExC,cAAA,MAAM,EAAN,MAFwC;AAGxC,cAAA,WAAW,EAAX,WAHwC;AAIxC,cAAA,eAAe,EAAf,eAJwC;AAKxC,cAAA,kBAAkB,EAAlB,kBALwC;AAMxC,cAAA,mBAAmB,EAAnB;AANwC,aAAvB,CARd;;AAAA;AAQC,YAAA,IARD;AAgBL,YAAA,OAAO,CAAC,GAAR,CAAY,cAAZ,EAA4B,IAA5B;AAhBK,6CAiBE,IAjBF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAAP,OAAA,CAAA,SAAA,GAAA,SAAA","sourcesContent":["import { actions, Wallet } from '@metaplex/js';\nimport { PublicKey } from '@solana/web3.js';\nimport useCluster from '@/composables/cluster';\n\nconst { getConnection } = useCluster();\n\nexport async function NFTUpdate(\n  wallet: Wallet,\n  editionMint: PublicKey,\n  newMetadataData?: any,\n  newUpdateAuthority?: PublicKey,\n  primarySaleHappened?: boolean\n) {\n  const connection = getConnection();\n  const txId = await actions.updateMetadata({\n    connection,\n    wallet,\n    editionMint,\n    newMetadataData,\n    newUpdateAuthority,\n    primarySaleHappened,\n  });\n  console.log('Updated NFT:', txId);\n  return txId;\n}\n"],"sourceRoot":""}]}