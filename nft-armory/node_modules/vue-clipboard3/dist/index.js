"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var clipboard_1 = __importDefault(require("clipboard"));
exports.default = (function (opts) {
    // default appendToBody true
    var appendToBody = (opts === null || opts === void 0 ? void 0 : opts.appendToBody) === undefined ? true : opts.appendToBody;
    return {
        toClipboard: function (text, container) {
            return new Promise(function (resolve, reject) {
                // make fake element
                var fakeEl = document.createElement('button');
                // setup a new Clipboard.js
                var clipboard = new clipboard_1.default(fakeEl, {
                    text: function () { return text; },
                    action: function () { return 'copy'; },
                    container: container !== undefined ? container : document.body
                });
                clipboard.on('success', function (e) {
                    clipboard.destroy();
                    resolve(e);
                });
                clipboard.on('error', function (e) {
                    clipboard.destroy();
                    reject(e);
                });
                // appendToBody fixes IE
                if (appendToBody)
                    document.body.appendChild(fakeEl);
                // simulate click
                fakeEl.click();
                // remove from body if appended
                if (appendToBody)
                    document.body.removeChild(fakeEl);
            });
        }
    };
});
