{"version":3,"sources":["webpack://Openlogin/webpack/bootstrap","webpack://Openlogin/external \"@babel/runtime/regenerator\"","webpack://Openlogin/./src/constants.ts","webpack://Openlogin/external \"@babel/runtime/helpers/asyncToGenerator\"","webpack://Openlogin/external \"@babel/runtime/helpers/defineProperty\"","webpack://Openlogin/./src/utils.ts","webpack://Openlogin/external \"@toruslabs/openlogin-utils\"","webpack://Openlogin/external \"@toruslabs/openlogin-jrpc\"","webpack://Openlogin/external \"@babel/runtime/helpers/classCallCheck\"","webpack://Openlogin/external \"@babel/runtime/helpers/createClass\"","webpack://Openlogin/external \"@toruslabs/eccrypto\"","webpack://Openlogin/external \"@babel/runtime/helpers/assertThisInitialized\"","webpack://Openlogin/external \"@babel/runtime/helpers/slicedToArray\"","webpack://Openlogin/./src/Modal.ts","webpack://Openlogin/./src/OpenLogin.ts","webpack://Openlogin/./src/Provider.ts","webpack://Openlogin/./src/MemoryStore.ts","webpack://Openlogin/./src/OpenLoginStore.ts","webpack://Openlogin/external \"@babel/runtime/helpers/typeof\"","webpack://Openlogin/external \"@toruslabs/http-helpers\"","webpack://Openlogin/external \"@babel/runtime/helpers/getPrototypeOf\"","webpack://Openlogin/external \"lodash.merge\"","webpack://Openlogin/external \"@babel/runtime/helpers/inherits\"","webpack://Openlogin/external \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack://Openlogin/external \"pump\"","webpack://Openlogin/./src/index.ts"],"names":["iframeDOMElementID","modalDOMElementID","storeKey","UX_MODE","POPUP","REDIRECT","OPENLOGIN_METHOD","LOGIN","LOGOUT","CHECK_3PC_SUPPORT","SET_PID_DATA","GET_DATA","ALLOWED_INTERACTIONS","JRPC","OPENLOGIN_NETWORK","MAINNET","TESTNET","DEVELOPMENT","LOGIN_PROVIDER","GOOGLE","FACEBOOK","REDDIT","DISCORD","TWITCH","APPLE","LINE","GITHUB","KAKAO","LINKEDIN","TWITTER","WEIBO","WECHAT","EMAIL_PASSWORDLESS","WEBAUTHN","JWT","documentReady","Promise","resolve","document","readyState","addEventListener","htmlToElement","html","template","window","createElement","trimmedHtml","trim","innerHTML","content","firstChild","whitelistUrl","clientId","appKey","origin","appKeyBuf","Buffer","from","padStart","base64url","encode","getPublic","Error","sign","keccak","update","digest","sig","getHashQueryParams","replaceUrl","result","url","URL","location","href","searchParams","forEach","value","key","queryResult","get","queryParams","JSON","parse","safeatob","Object","keys","error","console","hash","substr","hashUrl","hashResult","hashParams","cleanUrl","pathname","history","replaceState","awaitReq","id","windowRef","reject","closedByHandler","closedMonitor","setInterval","closed","clearInterval","handler","ev","pid","data","removeEventListener","close","constructURL","params","baseURL","query","append","h","toString","storageAvailable","type","storageExists","storageLength","storage","length","x","setItem","removeItem","code","name","sessionStorageAvailable","localStorageAvailable","preloadIframe","openloginIframeHtml","crossOrigin","rel","relList","supports","head","appendChild","getPopupFeatures","dualScreenLeft","screenLeft","undefined","screenX","dualScreenTop","screenTop","screenY","w","width","innerWidth","documentElement","clientWidth","screen","height","innerHeight","clientHeight","systemZoom","left","Math","abs","top","features","handleStream","handle","eventName","handlerWrapper","chunk","removeListener","on","Modal","modalUrl","initIFrame","setupStream","iframeElem","mux","setupMultiplex","PostMessageStream","target","targetWindow","contentWindow","verifierStream","createStream","src","documentIFrameElem","getElementById","remove","log","_hideModal","body","style","display","position","right","bottom","border","modalZIndex","setAttribute","entries","map","k","v","join","whiteLabel","loginConfig","cb","_showModal","modalHandler","write","initialized","OpenLogin","options","provider","Proxy","Provider","deleteProperty","_iframeUrl","network","modal","initState","no3PC","_startUrl","_popupUrl","redirectUrl","protocol","host","uxMode","replaceUrlOnRedirect","originData","state","store","OpenLoginStore","getInstance","iframeUrl","startUrl","popupUrl","support3PC","all","init","updateOriginData","_syncState","_check3PCSupport","res","_getData","privKey","filteredOriginData","stringify","getWhitelist","getWhiteLabel","whitelist","post","project_id","signed_urls","defaultParams","loginParams","request","fastLogin","method","allowedInteractions","loginProvider","_selectedLogin","_modal","logoutParams","_clientId","args","randomId","session","userData","timestamp","Date","now","_user","_userSig","_userData","_originData","_whiteLabelData","_loginConfig","includes","_jrpcRequest","_origin","_setPIDData","setTimeout","b64Params","jsonToBase64","_pid","_method","u","open","Array","isArray","push","_rpcRequest","getRpcPromiseCallback","newState","set","_prompt","cancel","merge","selectedLoginResponse","cleanup","message","privateKey","exec","encrypt","ciphertext","decrypt","storeData","getStore","userInfo","email","profileImage","aggregateVerifier","verifier","verifierId","typeOfLogin","rpcStream","JRPCConnection","createStreamMiddleware","pump","stream","rpcEngine","JRPCEngine","createIdRemapMiddleware","middleware","payload","callback","jsonrpc","SafeEventEmitter","MemoryStore","getItem","resetStore","currStore","instance","localStorage"],"mappings":"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","file":"openlogin.cjs.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 23);\n","module.exports = require(\"@babel/runtime/regenerator\");","import { LoginConfig, OriginData, WhiteLabelData } from \"@toruslabs/openlogin-jrpc\";\nimport { ExtraLoginOptions } from \"@toruslabs/openlogin-utils\";\n\nexport const iframeDOMElementID = \"openlogin-iframe\";\nexport const modalDOMElementID = \"openlogin-modal\";\n\nexport const storeKey = \"openlogin_store\";\n\nexport type PopupResponse<T> = {\n  pid: string;\n  data: T;\n};\n\nexport type Maybe<T> = Partial<T> | null | undefined;\n\nexport const UX_MODE = {\n  POPUP: \"popup\",\n  REDIRECT: \"redirect\",\n} as const;\n\nexport type UX_MODE_TYPE = typeof UX_MODE[keyof typeof UX_MODE];\n\nexport const OPENLOGIN_METHOD = {\n  LOGIN: \"openlogin_login\",\n  LOGOUT: \"openlogin_logout\",\n  CHECK_3PC_SUPPORT: \"openlogin_check_3PC_support\",\n  SET_PID_DATA: \"openlogin_set_pid_data\",\n  GET_DATA: \"openlogin_get_data\",\n} as const;\n\n// autocomplete workaround https://github.com/microsoft/TypeScript/issues/29729\nexport type CUSTOM_OPENLOGIN_METHOD_TYPE = string & { toString?: (radix?: number) => string };\n\nexport type OPENLOGIN_METHOD_TYPE = typeof OPENLOGIN_METHOD[keyof typeof OPENLOGIN_METHOD];\n\nexport const ALLOWED_INTERACTIONS = {\n  POPUP: \"popup\",\n  REDIRECT: \"redirect\",\n  JRPC: \"jrpc\",\n} as const;\n\nexport type ALLOWED_INTERACTIONS_TYPE = typeof ALLOWED_INTERACTIONS[keyof typeof ALLOWED_INTERACTIONS];\n\nexport type RequestParams = {\n  startUrl?: string;\n  popupUrl?: string;\n  method: OPENLOGIN_METHOD_TYPE | CUSTOM_OPENLOGIN_METHOD_TYPE;\n  params: Record<string, unknown>[];\n  allowedInteractions: ALLOWED_INTERACTIONS_TYPE[];\n};\n\nexport type BaseLogoutParams = {\n  /**\n   * You can get your clientId/projectId by registering your\n   * dapp on {@link \"https://developer.tor.us\"| developer dashbaord}\n   */\n  clientId: string;\n  /**\n   * Setting fastLogin to `true` will disable fast login for the user on this dapp.\n   *\n   * Defaults to false\n   * @defaultValue false\n   * @experimental\n   *\n   * @remarks\n   * Use this option with caution only when you are sure that you wish to disable fast login for the user on this dapp.\n   * In general you may not need to use this option.\n   */\n  fastLogin: boolean;\n};\n\nexport type BaseRedirectParams = {\n  /**\n   * redirectUrl is the dapp's url where user will be redirected after login.\n   *\n   * @remarks\n   * Register this url at {@link \"https://developer.tor.us\"| developer dashbaord}\n   * else initialization will give error.\n   */\n  redirectUrl?: string;\n  /**\n   * Any custom state you wish to pass along. This will be returned to you post redirect.\n   * Use this to store data that you want to be available to the dapp after login.\n   */\n  appState?: string;\n};\n\nexport const OPENLOGIN_NETWORK = {\n  MAINNET: \"mainnet\",\n  TESTNET: \"testnet\",\n  DEVELOPMENT: \"development\",\n} as const;\n\nexport type OPENLOGIN_NETWORK_TYPE = typeof OPENLOGIN_NETWORK[keyof typeof OPENLOGIN_NETWORK];\n\nexport type OpenLoginOptions = {\n  /**\n   * You can get your clientId/projectId by registering your\n   * dapp on {@link \"https://developer.tor.us\"| developer dashbaord}\n   */\n  clientId: string;\n\n  /**\n   * network specifies the openlogin iframe url url to be used.\n   *\n   * - `'mainnet'`: https://app.openlogin.com will be used which is the production version.\n   * - `'testnet'`: https://beta.openlogin.com will be used which is the beta version.\n   * - `'development'`: http://localhost:3000 will be used for development purpose.\n   */\n  network: OPENLOGIN_NETWORK_TYPE;\n\n  /**\n   * Setting no3PC forces openlogin to assume that third party cookies are blocked\n   * in the browser.\n   *\n   * @defaultValue false\n   * @remarks\n   * Only pass no3PC to `true` when you are sure that third party cookies are not\n   * supported. By default openlogin will self check third party cookies and proceed\n   * accordingly.\n   */\n  no3PC?: boolean;\n\n  /**\n   * redirectUrl is the dapp's url where user will be redirected after login.\n   *\n   * @remarks\n   * Register this url at {@link \"https://developer.tor.us\"| developer dashbaord}\n   * else initialization will give error.\n   */\n  redirectUrl?: string;\n\n  /**\n   * two uxModes are supported:-\n   * - `'POPUP'`: In this uxMode, a popup will be shown to user for login.\n   * - `'REDIRECT'`: In this uxMode, user will be redirected to a new window tab for login.\n   *\n   * @defaultValue `'POPUP'`\n   * @remarks\n   *\n   * Use of `'REDIRECT'` mode is recommended in browsers where popups might get blocked.\n   */\n  uxMode?: UX_MODE_TYPE;\n\n  /**\n   * replaceUrlOnRedirect removes the params from the redirected url after login\n   *\n   * @defaultValue true\n   */\n  replaceUrlOnRedirect?: boolean;\n\n  /**\n   * originData is used to verify the origin of dapp by iframe.\n   *\n   * @internal\n   * @remarks\n   * You don't have to pass originData explicitly if you have registered your dapp at\n   * {@link \"https://developer.tor.us\"| developer dashbaord}.\n   *\n   * originData contains a signature of dapp's origin url which is generated using\n   * project's secret.\n   */\n  originData?: OriginData;\n\n  /**\n   * loginConfig enables you to pass your own login verifiers configuration for various\n   * loginProviders.\n   *\n   * loginConfig is key value map where each key should be a valid loginProvider and value\n   * should be custom configuration for that loginProvider\n   *\n   * @remarks\n   * You can deploy your own verifiers from {@link \"https://developer.tor.us\"| developer dashbaord}\n   * to use here.\n   *\n   */\n  loginConfig?: LoginConfig;\n\n  /**\n   * _iframeUrl is for internal development use only and is used to override the\n   * `network` parameter.\n   * @internal\n   */\n  _iframeUrl?: string;\n  /**\n   * _startUrl is for internal development use only and is used specify authentication\n   * start url of iframe.\n   * @internal\n   */\n  _startUrl?: string;\n\n  /**\n   * _popupUrl is for internal development use only and is used specify url of popup window\n   * for popup uxMode.\n   * @internal\n   */\n  _popupUrl?: string;\n\n  /**\n   * options for whitelabling default openlogin modal.\n   */\n  whiteLabel?: WhiteLabelData;\n};\n\nexport const LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\",\n  WEBAUTHN: \"webauthn\",\n  JWT: \"jwt\",\n} as const;\n\n/**\n * {@label loginProviderType}\n */\nexport type LOGIN_PROVIDER_TYPE = typeof LOGIN_PROVIDER[keyof typeof LOGIN_PROVIDER];\n\n// autocomplete workaround https://github.com/microsoft/TypeScript/issues/29729\nexport type CUSTOM_LOGIN_PROVIDER_TYPE = string & { toString?: (radix?: number) => string };\n\nexport type LoginParams = BaseRedirectParams & {\n  /**\n   * loginProvider sets the oauth login method to be used.\n   * You can use any of the valid loginProvider from the supported list.\n   *\n   * If this param is not passed then it will show all the available\n   * login methods to user in a modal.\n   *\n   */\n  loginProvider?: LOGIN_PROVIDER_TYPE | CUSTOM_LOGIN_PROVIDER_TYPE;\n\n  /**\n   * Setting fastLogin to `true` will force user to login with webauthn if\n   * webauthn is available on device.\n   *\n   * Defaults to false\n   * @defaultValue false\n   * @experimental\n   *\n   * @remarks\n   * Use this option with caution only when you are sure about that user has\n   * enabled webauthn while registration, else don't use this option.\n   * Openlogin will itself take care of detecting and handling webauthn.\n   * In general you may not need to use this option.\n   */\n  fastLogin?: boolean;\n\n  /**\n   * Setting relogin to `true` will force user to relogin when login\n   * method is called even if user is already logged in. By default login\n   * method call skips login process if user is already logged in.\n   *\n   * * Defaults to false\n   * @defaultValue false\n   */\n  relogin?: boolean;\n\n  /**\n   * setting skipTKey to `true` will skip TKey onboarding for new users,\n   * whereas old users  will be presented with an option to skip tKey in UI\n   * if this option is enabled.\n   *\n   * Defaults to false\n   * @defaultValue false\n   */\n  skipTKey?: boolean;\n\n  /**\n   * This option is for internal use only in torus wallet and has not effect\n   * on user's login on other dapps.\n   *\n   * Defaults to false\n   * @defaultValue false\n   * @internal\n   */\n  getWalletKey?: boolean;\n\n  /**\n   * extraLoginOptions can be used to pass standard oauth login options to\n   * loginProvider.\n   *\n   * For ex: you will have to pass `login_hint` as user's email and `domain`\n   * as your app domain in `extraLoginOptions` while using `email_passwordless`\n   * loginProvider\n   */\n  extraLoginOptions?: ExtraLoginOptions;\n};\n\nexport type OpenloginUserInfo = {\n  email: string;\n  name: string;\n  profileImage: string;\n  aggregateVerifier: string;\n  verifier: string;\n  verifierId: string;\n  typeOfLogin: LOGIN_PROVIDER_TYPE | CUSTOM_LOGIN_PROVIDER_TYPE;\n};\n","module.exports = require(\"@babel/runtime/helpers/asyncToGenerator\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","import { getPublic, sign } from \"@toruslabs/eccrypto\";\nimport { base64url, keccak, safeatob } from \"@toruslabs/openlogin-utils\";\n\nimport { PopupResponse } from \"./constants\";\n\nexport async function documentReady(): Promise<void> {\n  return new Promise<void>((resolve) => {\n    if (document.readyState !== \"loading\") {\n      resolve();\n    } else {\n      document.addEventListener(\"DOMContentLoaded\", () => {\n        resolve();\n      });\n    }\n  });\n}\n\nexport const htmlToElement = (html: string): Node => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild;\n};\n\nexport async function whitelistUrl(clientId: string, appKey: string, origin: string): Promise<string> {\n  const appKeyBuf = Buffer.from(appKey.padStart(64, \"0\"), \"hex\");\n  if (base64url.encode(getPublic(appKeyBuf)) !== clientId) throw new Error(\"appKey mismatch\");\n  const sig = await sign(appKeyBuf, Buffer.from(keccak(\"keccak256\").update(origin).digest(\"hex\"), \"hex\"));\n  return base64url.encode(sig);\n}\n\nexport function getHashQueryParams(replaceUrl = false): Record<string, string> {\n  const result = {};\n\n  const url = new URL(window.location.href);\n  url.searchParams.forEach((value, key) => {\n    if (key !== \"result\") {\n      result[key] = value;\n    }\n  });\n  const queryResult = url.searchParams.get(\"result\");\n  if (queryResult) {\n    try {\n      const queryParams = JSON.parse(safeatob(queryResult));\n      Object.keys(queryParams).forEach((key) => {\n        result[key] = queryParams[key];\n      });\n    } catch (error) {\n      window.console.error(error);\n    }\n  }\n\n  const hash = url.hash.substr(1);\n  const hashUrl = new URL(`${window.location.origin}/?${hash}`);\n  hashUrl.searchParams.forEach((value, key) => {\n    if (key !== \"result\") {\n      result[key] = value;\n    }\n  });\n  const hashResult = hashUrl.searchParams.get(\"result\");\n\n  if (hashResult) {\n    try {\n      const hashParams = JSON.parse(safeatob(hashResult));\n      Object.keys(hashParams).forEach((key) => {\n        result[key] = hashParams[key];\n      });\n    } catch (error) {\n      window.console.error(error);\n    }\n  }\n\n  if (replaceUrl) {\n    const cleanUrl = window.location.origin + window.location.pathname;\n    window.history.replaceState(null, \"\", cleanUrl);\n  }\n\n  return result;\n}\n\nexport function awaitReq<T>(id: string, windowRef: Window): Promise<T> {\n  return new Promise((resolve, reject) => {\n    if (!windowRef) reject(new Error(\"Unable to open window\"));\n    let closedByHandler = false;\n    const closedMonitor = setInterval(() => {\n      if (!closedByHandler && windowRef.closed) {\n        clearInterval(closedMonitor);\n        reject(new Error(\"user closed popup\"));\n      }\n    }, 500);\n    const handler = (ev: MessageEvent<PopupResponse<T & { error?: string }>>) => {\n      const { pid } = ev.data;\n      if (id !== pid) return;\n      window.removeEventListener(\"message\", handler);\n      closedByHandler = true;\n      clearInterval(closedMonitor);\n      windowRef.close();\n      if (ev.data.data && ev.data.data.error) {\n        reject(new Error(ev.data.data.error));\n      } else {\n        resolve(ev.data.data);\n      }\n    };\n\n    window.addEventListener(\"message\", handler);\n  });\n}\n\nexport function constructURL(params: { baseURL: string; query?: Record<string, unknown>; hash?: Record<string, unknown> }): string {\n  const { baseURL, query, hash } = params;\n\n  const url = new URL(baseURL);\n  if (query) {\n    Object.keys(query).forEach((key) => {\n      url.searchParams.append(key, query[key] as string);\n    });\n  }\n  if (hash) {\n    const h = new URL(constructURL({ baseURL, query: hash })).searchParams.toString();\n    url.hash = h;\n  }\n  return url.toString();\n}\n\nexport function storageAvailable(type: string): boolean {\n  let storageExists = false;\n  let storageLength = 0;\n  let storage: Storage;\n  try {\n    storage = window[type];\n    storageExists = true;\n    storageLength = storage.length;\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (error) {\n    return (\n      error &&\n      // everything except Firefox\n      (error.code === 22 ||\n        // Firefox\n        error.code === 1014 ||\n        // test name field too, because code might not be present\n        // everything except Firefox\n        error.name === \"QuotaExceededErro r\" ||\n        // Firefox\n        error.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\n      // acknowledge QuotaExceededError only if there's something already stored\n      storageExists &&\n      storageLength !== 0\n    );\n  }\n}\n\nexport const sessionStorageAvailable = storageAvailable(\"sessionStorage\");\nexport const localStorageAvailable = storageAvailable(\"localStorage\");\n\nexport function preloadIframe(url: string): void {\n  try {\n    const openloginIframeHtml = document.createElement(\"link\");\n    openloginIframeHtml.href = url;\n    openloginIframeHtml.crossOrigin = \"anonymous\";\n    openloginIframeHtml.type = \"text/html\";\n    openloginIframeHtml.rel = \"prefetch\";\n    if (openloginIframeHtml.relList && openloginIframeHtml.relList.supports) {\n      if (openloginIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(openloginIframeHtml);\n      }\n    }\n  } catch (error) {\n    window.console.error(error);\n  }\n}\n\nexport function getPopupFeatures(): string {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n\n  const w = 1200;\n  const h = 700;\n\n  const width = window.innerWidth\n    ? window.innerWidth\n    : document.documentElement.clientWidth\n    ? document.documentElement.clientWidth\n    : window.screen.width;\n\n  const height = window.innerHeight\n    ? window.innerHeight\n    : document.documentElement.clientHeight\n    ? document.documentElement.clientHeight\n    : window.screen.height;\n\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = `titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${h / systemZoom},width=${w / systemZoom},top=${top},left=${left}`;\n  return features;\n}\n","module.exports = require(\"@toruslabs/openlogin-utils\");","module.exports = require(\"@toruslabs/openlogin-jrpc\");","module.exports = require(\"@babel/runtime/helpers/classCallCheck\");","module.exports = require(\"@babel/runtime/helpers/createClass\");","module.exports = require(\"@toruslabs/eccrypto\");","module.exports = require(\"@babel/runtime/helpers/assertThisInitialized\");","module.exports = require(\"@babel/runtime/helpers/slicedToArray\");","import { LoginConfig, ObjectMultiplex, PostMessageStream, setupMultiplex, Substream, WhiteLabelData } from \"@toruslabs/openlogin-jrpc\";\n\nimport { modalDOMElementID } from \"./constants\";\nimport { documentReady } from \"./utils\";\n\nexport const handleStream = (handle: Substream, eventName: string, handler: (chunk: any) => void): void => {\n  const handlerWrapper = (chunk) => {\n    handler(chunk);\n    handle.removeListener(eventName, handlerWrapper);\n  };\n  handle.on(eventName, handlerWrapper);\n};\n\nexport class Modal {\n  modalUrl: string;\n\n  iframeElem: HTMLIFrameElement;\n\n  initialized = false;\n\n  modalZIndex = 99999;\n\n  mux: ObjectMultiplex;\n\n  verifierStream: Substream;\n\n  constructor(modalUrl: string) {\n    this.modalUrl = modalUrl;\n  }\n\n  async init(): Promise<void> {\n    await this.initIFrame(this.modalUrl);\n    this.setupStream();\n  }\n\n  setupStream(): void {\n    if (this.iframeElem === null) throw new Error(\"iframe is null\");\n    this.mux = setupMultiplex(\n      new PostMessageStream({\n        name: \"modal_iframe_rpc\",\n        target: \"modal_rpc\",\n        targetWindow: this.iframeElem.contentWindow,\n      })\n    );\n    this.verifierStream = this.mux.createStream(\"verifier\");\n  }\n\n  async initIFrame(src: string): Promise<void> {\n    await documentReady();\n    const documentIFrameElem = document.getElementById(modalDOMElementID) as HTMLIFrameElement;\n    if (documentIFrameElem) {\n      documentIFrameElem.remove();\n      window.console.log(\"already initialized, removing previous modal iframe\");\n    }\n    const iframeElem = document.createElement(\"iframe\");\n    iframeElem.src = src;\n    iframeElem.id = modalDOMElementID;\n    this.iframeElem = iframeElem;\n    this._hideModal();\n    document.body.appendChild(this.iframeElem);\n  }\n\n  _showModal(): void {\n    const style: Record<string, unknown> = {};\n    style.display = \"block\";\n    style.position = \"fixed\";\n    style.width = \"100%\";\n    style.height = \"100%\";\n    style.top = \"0px\";\n    style.right = \"0px\";\n    style.left = \"0px\";\n    style.bottom = \"0px\";\n    style.border = \"0\";\n    style[\"z-index\"] = this.modalZIndex;\n    this.iframeElem.setAttribute(\n      \"style\",\n      Object.entries(style)\n        .map(([k, v]) => `${k}:${v}`)\n        .join(\";\")\n    );\n  }\n\n  _hideModal(): void {\n    const style: Record<string, unknown> = {};\n    style.display = \"none\";\n    style.position = \"fixed\";\n    style.width = \"100%\";\n    style.height = \"100%\";\n    style.top = \"0px\";\n    style.right = \"0px\";\n    style.left = \"0px\";\n    style.bottom = \"0px\";\n    style.border = \"0\";\n    style[\"z-index\"] = this.modalZIndex;\n    this.iframeElem.setAttribute(\n      \"style\",\n      Object.entries(style)\n        .map(([k, v]) => `${k}:${v}`)\n        .join(\";\")\n    );\n  }\n\n  async _prompt(clientId: string, whiteLabel: WhiteLabelData, loginConfig: LoginConfig, cb: (chunk: any) => Promise<void>): Promise<void> {\n    this._showModal();\n    const modalHandler = (chunk) => {\n      this._hideModal();\n      cb(chunk);\n    };\n    handleStream(this.verifierStream, \"data\", modalHandler);\n    this.verifierStream.write({\n      name: \"prompt\",\n      clientId,\n      whiteLabel,\n      loginConfig,\n    });\n  }\n\n  async cleanup(): Promise<void> {\n    await documentReady();\n    const documentIFrameElem = document.getElementById(modalDOMElementID) as HTMLIFrameElement;\n    if (documentIFrameElem) {\n      documentIFrameElem.remove();\n      this.iframeElem = null;\n    }\n    this.initialized = false;\n  }\n}\n","import { decrypt, Ecies, encrypt, getPublic, sign } from \"@toruslabs/eccrypto\";\nimport { post } from \"@toruslabs/http-helpers\";\nimport { getRpcPromiseCallback, JRPCRequest, LoginConfig, OriginData, SessionInfo, WhiteLabelData } from \"@toruslabs/openlogin-jrpc\";\nimport { base64url, jsonToBase64, keccak, randomId } from \"@toruslabs/openlogin-utils\";\nimport merge from \"lodash.merge\";\n\nimport {\n  ALLOWED_INTERACTIONS,\n  BaseLogoutParams,\n  BaseRedirectParams,\n  CUSTOM_LOGIN_PROVIDER_TYPE,\n  LOGIN_PROVIDER_TYPE,\n  LoginParams,\n  OPENLOGIN_METHOD,\n  OPENLOGIN_NETWORK,\n  OPENLOGIN_NETWORK_TYPE,\n  OpenLoginOptions,\n  OpenloginUserInfo,\n  RequestParams,\n  UX_MODE,\n  UX_MODE_TYPE,\n} from \"./constants\";\nimport { Modal } from \"./Modal\";\nimport OpenLoginStore from \"./OpenLoginStore\";\nimport Provider from \"./Provider\";\nimport { awaitReq, constructURL, getHashQueryParams, getPopupFeatures, preloadIframe } from \"./utils\";\n\npreloadIframe(\"https://app.openlogin.com/start\");\npreloadIframe(\"https://app.openlogin.com/sdk-modal\");\n\nexport type OpenLoginState = {\n  network: OPENLOGIN_NETWORK_TYPE;\n  privKey?: string;\n  walletKey?: string;\n  tKey?: string;\n  oAuthPrivateKey?: string;\n  support3PC?: boolean;\n  clientId: string;\n  iframeUrl: string;\n  redirectUrl: string;\n  startUrl: string;\n  popupUrl: string;\n  store: OpenLoginStore;\n  uxMode: UX_MODE_TYPE;\n  replaceUrlOnRedirect: boolean;\n  originData: OriginData;\n  whiteLabel: WhiteLabelData;\n  loginConfig: LoginConfig;\n};\n\nclass OpenLogin {\n  provider: Provider;\n\n  state: OpenLoginState;\n\n  modal: Modal;\n\n  constructor(options: OpenLoginOptions) {\n    this.provider = new Proxy(new Provider(), {\n      deleteProperty: () => true, // work around for web3\n    });\n    if (!options._iframeUrl) {\n      if (options.network === OPENLOGIN_NETWORK.MAINNET) {\n        options._iframeUrl = \"https://app.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.TESTNET) {\n        options._iframeUrl = \"https://beta.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.DEVELOPMENT) {\n        options._iframeUrl = \"http://localhost:3000\";\n      }\n    }\n    if (!options._iframeUrl) {\n      throw new Error(\"unspecified network and iframeUrl\");\n    }\n    this.modal = new Modal(`${options._iframeUrl}/sdk-modal`);\n    this.initState({\n      ...options,\n      no3PC: options.no3PC ?? false,\n      _iframeUrl: options._iframeUrl,\n      _startUrl: options._startUrl ?? `${options._iframeUrl}/start`,\n      _popupUrl: options._popupUrl ?? `${options._iframeUrl}/popup-window`,\n      redirectUrl: options.redirectUrl ?? `${window.location.protocol}//${window.location.host}${window.location.pathname}`,\n      uxMode: options.uxMode ?? UX_MODE.REDIRECT,\n      replaceUrlOnRedirect: options.replaceUrlOnRedirect ?? true,\n      originData: options.originData ?? { [window.location.origin]: \"\" },\n      whiteLabel: options.whiteLabel ?? {},\n      loginConfig: options.loginConfig ?? {},\n    });\n  }\n\n  initState(options: Required<OpenLoginOptions>): void {\n    this.state = {\n      uxMode: options.uxMode,\n      network: options.network,\n      store: OpenLoginStore.getInstance(),\n      iframeUrl: options._iframeUrl,\n      startUrl: options._startUrl,\n      popupUrl: options._popupUrl,\n      clientId: options.clientId,\n      redirectUrl: options.redirectUrl,\n      replaceUrlOnRedirect: options.replaceUrlOnRedirect,\n      originData: options.originData,\n      loginConfig: options.loginConfig,\n      support3PC: !options.no3PC,\n      whiteLabel: options.whiteLabel,\n    };\n  }\n\n  async init(): Promise<void> {\n    if (this.state.support3PC) {\n      await Promise.all([this.provider.init({ iframeUrl: this.state.iframeUrl }), this.modal.init(), this.updateOriginData()]);\n      this._syncState(getHashQueryParams(this.state.replaceUrlOnRedirect));\n      const res = await this._check3PCSupport();\n      this.state.support3PC = !!res.support3PC;\n      if (this.state.support3PC) {\n        this._syncState(await this._getData());\n      }\n    } else {\n      await this.updateOriginData();\n      this._syncState(getHashQueryParams(this.state.replaceUrlOnRedirect));\n    }\n  }\n\n  get privKey(): string {\n    return this.state.privKey ? this.state.privKey.padStart(64, \"0\") : \"\";\n  }\n\n  async updateOriginData(): Promise<void> {\n    const filteredOriginData = JSON.parse(JSON.stringify(this.state.originData));\n    Object.keys(filteredOriginData).forEach((key) => {\n      if (filteredOriginData[key] === \"\") delete filteredOriginData[key];\n    });\n    const [whitelist, whiteLabel] = await Promise.all([this.getWhitelist(), this.getWhiteLabel()]);\n    this._syncState({ originData: { ...whitelist, ...filteredOriginData }, whiteLabel: { ...whiteLabel, ...this.state.whiteLabel } });\n  }\n\n  async getWhitelist(): Promise<OriginData> {\n    try {\n      const { clientId } = this.state;\n      if (!clientId) {\n        throw new Error(\"unspecified clientId\");\n      }\n      const res = await post<{ signed_urls: OriginData }>(\"https://api.developer.tor.us/whitelist\", {\n        project_id: this.state.clientId,\n      });\n      return res.signed_urls;\n    } catch (_) {\n      // fail silently\n      return {};\n    }\n  }\n\n  async getWhiteLabel(): Promise<WhiteLabelData> {\n    try {\n      const { clientId } = this.state;\n      if (!clientId) {\n        throw new Error(\"unspecified clientId\");\n      }\n      const res = await post<{ whiteLabel: WhiteLabelData }>(\"https://api.developer.tor.us/whitelabel\", {\n        project_id: this.state.clientId,\n      });\n      return res.whiteLabel;\n    } catch (_) {\n      // fail silently\n      return {};\n    }\n  }\n\n  async _fastLogin(params: Partial<BaseRedirectParams>): Promise<{ privKey: string }> {\n    const defaultParams: BaseRedirectParams = {\n      redirectUrl: this.state.redirectUrl,\n    };\n\n    const loginParams: BaseRedirectParams = {\n      ...defaultParams,\n      ...params,\n    };\n\n    const res = await this.request<{ privKey: string }>({\n      params: [{ ...loginParams, fastLogin: true }],\n      method: OPENLOGIN_METHOD.LOGIN,\n      startUrl: this.state.startUrl,\n      popupUrl: this.state.popupUrl,\n      allowedInteractions: [ALLOWED_INTERACTIONS.POPUP, ALLOWED_INTERACTIONS.REDIRECT],\n    });\n\n    this.state.privKey = res.privKey;\n    return res;\n  }\n\n  async login(params?: LoginParams & Partial<BaseRedirectParams>): Promise<{ privKey: string }> {\n    if (params?.loginProvider) {\n      return this._selectedLogin(params);\n    }\n    return this._modal(params);\n  }\n\n  async _selectedLogin(params: LoginParams & Partial<BaseRedirectParams>): Promise<{ privKey: string }> {\n    const defaultParams: BaseRedirectParams = {\n      redirectUrl: this.state.redirectUrl,\n    };\n\n    const loginParams: LoginParams = {\n      loginProvider: params.loginProvider,\n      ...defaultParams,\n      ...params,\n    };\n\n    // fast login flow\n    // if (this.state.store.get(\"touchIDPreference\") === \"enabled\" && !loginParams.extraLoginOptions?.login_hint) {\n    //   return this._fastLogin(loginParams);\n    // }\n\n    const res = await this.request<{ privKey: string }>({\n      method: OPENLOGIN_METHOD.LOGIN,\n      allowedInteractions: [UX_MODE.REDIRECT, UX_MODE.POPUP],\n      startUrl: this.state.startUrl,\n      popupUrl: this.state.popupUrl,\n      params: [loginParams],\n    });\n    this.state.privKey = res.privKey;\n    return { privKey: this.privKey };\n  }\n\n  async logout(logoutParams: Partial<BaseLogoutParams> & Partial<BaseRedirectParams> = {}): Promise<void> {\n    const params: Record<string, unknown> = {};\n    // defaults\n    params.redirectUrl = this.state.redirectUrl;\n    params._clientId = this.state.clientId;\n\n    if (logoutParams.clientId) {\n      params._clientId = logoutParams.clientId;\n    }\n    if (logoutParams.fastLogin !== undefined) {\n      params.fastLogin = logoutParams.fastLogin;\n    }\n    if (logoutParams.redirectUrl !== undefined) {\n      params.redirectUrl = logoutParams.redirectUrl;\n    }\n\n    const res = await this.request<void>({\n      method: OPENLOGIN_METHOD.LOGOUT,\n      params: [params],\n      startUrl: this.state.startUrl,\n      popupUrl: this.state.popupUrl,\n      allowedInteractions: [ALLOWED_INTERACTIONS.JRPC, ALLOWED_INTERACTIONS.POPUP, ALLOWED_INTERACTIONS.REDIRECT],\n    });\n\n    this.state.privKey = \"\";\n    // if (!params.fastLogin) this.state.store.set(\"touchIDPreference\", \"disabled\");\n    return res;\n  }\n\n  async request<T>(args: RequestParams): Promise<T> {\n    const pid = randomId();\n    let { params } = args;\n\n    // Note: _origin is added later in postMessageStream for jrpc requests\n    // do not add it here since its used for checking postMessage constraints\n    const session: Partial<SessionInfo> = {};\n    if (params.length !== 1) throw new Error(\"request params array should have only one element\");\n    const { startUrl, popupUrl, method, allowedInteractions } = args;\n    if (allowedInteractions.length === 0) throw new Error(\"no allowed interactions\");\n\n    if (this.state.clientId) {\n      session._clientId = this.state.clientId;\n    }\n\n    if (this.privKey) {\n      const userData = {\n        clientId: session._clientId,\n        timestamp: Date.now().toString(),\n      };\n      const sig = await sign(\n        Buffer.from(this.privKey, \"hex\"),\n        Buffer.from(keccak(\"keccak256\").update(JSON.stringify(userData)).digest(\"hex\"), \"hex\")\n      );\n      session._user = getPublic(Buffer.from(this.privKey, \"hex\")).toString(\"hex\");\n      session._userSig = base64url.encode(sig);\n      session._userData = userData;\n    }\n\n    session._originData = this.state.originData;\n    session._whiteLabelData = this.state.whiteLabel;\n    session._loginConfig = this.state.loginConfig;\n\n    // add in session data (allow overrides)\n    params = [{ ...session, ...params[0] }];\n\n    // use JRPC where possible\n\n    if (this.state.support3PC && allowedInteractions.includes(ALLOWED_INTERACTIONS.JRPC)) {\n      return this._jrpcRequest<Record<string, unknown>[], T>({ method, params });\n    }\n\n    // set origin\n    params[0]._origin = new URL((params[0].redirectUrl as string) ?? this.state.redirectUrl).origin;\n\n    // preset params\n    if (this.state.support3PC) {\n      // set params first if 3PC supported\n      await this._setPIDData(pid, params);\n      // eslint-disable-next-line require-atomic-updates\n      params = [{}];\n    }\n\n    if (!startUrl || !popupUrl) {\n      throw new Error(\"no url for redirect / popup flow\");\n    }\n\n    // method and pid are always in URL hash params\n    // convert params from JSON to base64\n\n    if (this.state.uxMode === UX_MODE.REDIRECT) {\n      // if redirects preferred, check for redirect flows first, then check for popup flow\n\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.REDIRECT)) {\n        // give time for synchronous methods to complete before redirect\n        setTimeout(() => {\n          window.location.href = constructURL({\n            baseURL: startUrl,\n            hash: { b64Params: jsonToBase64(params[0]), _pid: pid, _method: method },\n          });\n        }, 50);\n        return {} as T;\n      }\n\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.POPUP)) {\n        const u = new URL(\n          constructURL({\n            baseURL: popupUrl,\n            hash: { b64Params: jsonToBase64(params[0]), _pid: pid, _method: method },\n          })\n        );\n        const windowRef = window.open(u.toString(), \"_blank\", getPopupFeatures());\n        return awaitReq<T>(pid, windowRef);\n      }\n    } else {\n      // if popups preferred, check for popup flows first, then check for redirect flow\n\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.POPUP)) {\n        const u = new URL(\n          constructURL({\n            baseURL: popupUrl,\n            hash: { b64Params: jsonToBase64(params[0]), _pid: pid, _method: method },\n          })\n        );\n        const windowRef = window.open(u.toString(), \"_blank\", getPopupFeatures());\n        return awaitReq<T>(pid, windowRef);\n      }\n\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.REDIRECT)) {\n        // give time for synchronous methods to complete before redirect\n        setTimeout(() => {\n          window.location.href = constructURL({\n            baseURL: startUrl,\n            hash: { b64Params: jsonToBase64(params[0]), _pid: pid, _method: method },\n          });\n        }, 50);\n        return null;\n      }\n    }\n\n    throw new Error(\"no matching allowed interactions\");\n  }\n\n  async _jrpcRequest<T, U>(args: JRPCRequest<T>): Promise<U> {\n    // await this.initialized;\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw new Error(\"invalid request args\");\n    }\n\n    const { method, params } = args;\n\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw new Error(\"invalid request method\");\n    }\n\n    if (params === undefined || !Array.isArray(params)) {\n      throw new Error(\"invalid request params\");\n    }\n\n    if (params.length === 0) {\n      params.push({});\n    }\n\n    return new Promise<U>((resolve, reject) => {\n      this.provider._rpcRequest({ method, params }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n\n  async _check3PCSupport(): Promise<Record<string, boolean>> {\n    return this._jrpcRequest<Record<string, unknown>[], Record<string, boolean>>({\n      method: OPENLOGIN_METHOD.CHECK_3PC_SUPPORT,\n      params: [{ _originData: this.state.originData }],\n    });\n  }\n\n  async _setPIDData(pid: string, data: Record<string, unknown>[]): Promise<void> {\n    await this.request({\n      allowedInteractions: [ALLOWED_INTERACTIONS.JRPC],\n      method: OPENLOGIN_METHOD.SET_PID_DATA,\n      params: [\n        {\n          pid,\n          data: data[0],\n        },\n      ],\n    });\n  }\n\n  async _getData(): Promise<Record<string, unknown>> {\n    return this.request<Record<string, unknown>>({\n      allowedInteractions: [ALLOWED_INTERACTIONS.JRPC],\n      method: OPENLOGIN_METHOD.GET_DATA,\n      params: [{}],\n    });\n  }\n\n  _syncState(newState: Record<string, unknown>): void {\n    if (newState.store) {\n      if (typeof newState.store !== \"object\") {\n        throw new Error(\"expected store to be an object\");\n      }\n      Object.keys(newState.store).forEach((key) => {\n        this.state.store.set(key, newState.store[key]);\n      });\n    }\n    const { store } = this.state;\n    this.state = { ...this.state, ...newState, store };\n  }\n\n  async _modal(params?: LoginParams & Partial<BaseRedirectParams>): Promise<{\n    privKey: string;\n  }> {\n    return new Promise<{ privKey: string }>((resolve, reject) => {\n      this.modal._prompt(this.state.clientId, this.state.whiteLabel, this.state.loginConfig, async (chunk): Promise<void> => {\n        if (chunk.cancel) {\n          reject(new Error(\"user canceled login\"));\n        } else {\n          try {\n            const selectedLoginResponse = await this._selectedLogin(merge(params, chunk));\n            resolve(selectedLoginResponse);\n          } catch (error) {\n            reject(error);\n          }\n        }\n      });\n    });\n  }\n\n  async _cleanup(): Promise<void> {\n    await this.provider.cleanup();\n    await this.modal.cleanup();\n  }\n\n  async encrypt(message: Buffer, privateKey?: string): Promise<Ecies> {\n    let privKey = privateKey;\n    if (!privKey) {\n      privKey = this.privKey;\n    }\n    // validations\n    if (!/^[0-9a-fA-f]{64}$/.exec(privKey)) {\n      if (privKey === \"\" || privKey === undefined) {\n        throw new Error(\"private key cannot be empty\");\n      } else {\n        throw new Error(\"invalid private key in encrypt\");\n      }\n    }\n    return encrypt(getPublic(Buffer.from(privKey, \"hex\")), message);\n  }\n\n  async decrypt(ciphertext: Ecies, privateKey?: string): Promise<Buffer> {\n    let privKey = privateKey;\n    if (!privKey) {\n      privKey = this.privKey;\n    }\n    // validations\n    if (!/^[0-9a-fA-f]{64}$/.exec(privKey)) {\n      if (privKey === \"\" || privKey === undefined) {\n        throw new Error(\"private key cannot be empty\");\n      } else {\n        throw new Error(\"invalid private key in decrypt\");\n      }\n    }\n    return decrypt(Buffer.from(privKey, \"hex\"), ciphertext);\n  }\n\n  async getUserInfo(): Promise<OpenloginUserInfo> {\n    if (this.privKey) {\n      const storeData = this.state.store.getStore();\n      const userInfo: OpenloginUserInfo = {\n        email: (storeData.email as string) || \"\",\n        name: (storeData.name as string) || \"\",\n        profileImage: (storeData.profileImage as string) || \"\",\n        aggregateVerifier: (storeData.aggregateVerifier as string) || \"\",\n        verifier: (storeData.verifier as string) || \"\",\n        verifierId: (storeData.verifierId as string) || \"\",\n        typeOfLogin: (storeData.typeOfLogin as LOGIN_PROVIDER_TYPE | CUSTOM_LOGIN_PROVIDER_TYPE) || \"\",\n      };\n\n      return userInfo;\n    }\n    throw new Error(\"user should be logged in to fetch userInfo\");\n  }\n}\n\nexport default OpenLogin;\n","import {\n  createIdRemapMiddleware,\n  createStreamMiddleware,\n  JRPCEngine,\n  JRPCRequest,\n  ObjectMultiplex,\n  PostMessageStream,\n  SafeEventEmitter,\n  setupMultiplex,\n  Stream,\n} from \"@toruslabs/openlogin-jrpc\";\nimport { randomId } from \"@toruslabs/openlogin-utils\";\nimport pump from \"pump\";\n\nimport { iframeDOMElementID } from \"./constants\";\nimport { documentReady } from \"./utils\";\n\nexport default class Provider extends SafeEventEmitter {\n  iframeElem: HTMLIFrameElement | null = null;\n\n  rpcStream: PostMessageStream;\n\n  rpcEngine: JRPCEngine;\n\n  initialized: boolean;\n\n  mux: ObjectMultiplex;\n\n  async init({ iframeUrl }: { iframeUrl: string }): Promise<void> {\n    await this.initIFrame(iframeUrl);\n    await this.setupStream();\n    this.initialized = true;\n  }\n\n  async initIFrame(src: string): Promise<void> {\n    await documentReady();\n    const documentIFrameElem = document.getElementById(iframeDOMElementID) as HTMLIFrameElement;\n    if (documentIFrameElem) {\n      documentIFrameElem.remove();\n      window.console.log(\"already initialized, removing previous provider iframe\");\n    }\n    const iframeElem = document.createElement(\"iframe\");\n    iframeElem.src = src;\n    iframeElem.id = iframeDOMElementID;\n    iframeElem.setAttribute(\"style\", \"display:none; position:fixed; top: 0; left: 0; width: 100%\");\n    document.body.appendChild(iframeElem);\n    this.iframeElem = iframeElem;\n  }\n\n  async setupStream(): Promise<void> {\n    if (this.iframeElem === null) throw new Error(\"iframe is null\");\n    this.rpcStream = new PostMessageStream({\n      name: \"embed_rpc\",\n      target: \"iframe_rpc\",\n      targetWindow: this.iframeElem.contentWindow,\n    });\n\n    this.mux = setupMultiplex(this.rpcStream);\n\n    const JRPCConnection = createStreamMiddleware();\n    pump(\n      JRPCConnection.stream as unknown as Stream,\n      this.mux.createStream(\"jrpc\") as unknown as Stream,\n      JRPCConnection.stream as unknown as Stream,\n      (error) => {\n        window.console.log(`JRPC connection broken`, error);\n      }\n    );\n\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(JRPCConnection.middleware);\n    this.rpcEngine = rpcEngine;\n  }\n\n  async cleanup(): Promise<void> {\n    await documentReady();\n    const documentIFrameElem = document.getElementById(iframeDOMElementID) as HTMLIFrameElement;\n    if (documentIFrameElem) {\n      documentIFrameElem.remove();\n      this.iframeElem = null;\n    }\n    this.initialized = false;\n  }\n\n  _rpcRequest(payload: JRPCRequest<unknown>, callback: (...args: any[]) => void): void {\n    if (!payload.jsonrpc) {\n      payload.jsonrpc = \"2.0\";\n    }\n    if (!payload.id) {\n      payload.id = randomId();\n    }\n    this.rpcEngine.handle(payload, callback);\n  }\n}\n","import { IStore } from \"./IStore\";\n\nexport class MemoryStore implements IStore {\n  store: Record<string, string> = {};\n\n  getItem(key: string): string {\n    return this.store[key];\n  }\n\n  setItem(key: string, value: string): void {\n    this.store[key] = value;\n  }\n}\n","import { storeKey } from \"./constants\";\nimport { IStore } from \"./IStore\";\nimport { MemoryStore } from \"./MemoryStore\";\nimport { localStorageAvailable } from \"./utils\";\n\nexport default class OpenLoginStore {\n  public storage: IStore;\n\n  private static instance: OpenLoginStore;\n\n  private constructor(storage: IStore) {\n    this.storage = storage;\n    try {\n      if (!storage.getItem(storeKey)) {\n        this.resetStore();\n      }\n    } catch (error) {\n      // Storage is not available\n    }\n  }\n\n  static getInstance(): OpenLoginStore {\n    if (!this.instance) {\n      this.instance = new this(localStorageAvailable ? localStorage : new MemoryStore());\n    }\n    return this.instance;\n  }\n\n  toJSON(): string {\n    return this.storage.getItem(storeKey);\n  }\n\n  resetStore(): Record<string, unknown> {\n    const currStore = this.getStore();\n    this.storage.setItem(storeKey, JSON.stringify({}));\n    return currStore;\n  }\n\n  getStore(): Record<string, unknown> {\n    return JSON.parse(this.storage.getItem(storeKey));\n  }\n\n  get<T>(key: string): T {\n    const store = JSON.parse(this.storage.getItem(storeKey));\n    return store[key];\n  }\n\n  set<T>(key: string, value: T): void {\n    const store = JSON.parse(this.storage.getItem(storeKey));\n    store[key] = value;\n    this.storage.setItem(storeKey, JSON.stringify(store));\n  }\n}\n","module.exports = require(\"@babel/runtime/helpers/typeof\");","module.exports = require(\"@toruslabs/http-helpers\");","module.exports = require(\"@babel/runtime/helpers/getPrototypeOf\");","module.exports = require(\"lodash.merge\");","module.exports = require(\"@babel/runtime/helpers/inherits\");","module.exports = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","module.exports = require(\"pump\");","export * from \"./constants\";\nexport * from \"./IStore\";\nexport { default } from \"./OpenLogin\";\nexport * from \"./OpenLogin\";\nexport { default as OpenLoginStore } from \"./OpenLoginStore\";\nexport { default as Provider } from \"./Provider\";\nexport * from \"./utils\";\n"],"sourceRoot":""}