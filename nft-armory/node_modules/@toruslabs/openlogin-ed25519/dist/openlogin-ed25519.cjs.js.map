{"version":3,"sources":["webpack://OpenloginEd25519/webpack/bootstrap","webpack://OpenloginEd25519/external \"@babel/runtime/helpers/toConsumableArray\"","webpack://OpenloginEd25519/external \"@toruslabs/tweetnacl-js\"","webpack://OpenloginEd25519/./src/utils.ts"],"names":["l","nacl","lowlevel","getED25519Key","privateKey","privKey","Buffer","from","d","Uint8Array","p","gf","sk","pk","crypto_hash","scalarbase","pack","i"],"mappings":";;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;AClFA,qE;;;;;;ACAA,oD;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAQA,IAAMA,CAAC,GAAIC,sBAAD,CAAcC,QAAxB;AAEO,SAASC,aAAT,CAAuBC,UAAvB,EAGL;AACA,MAAIC,OAAJ;;AACA,MAAI,OAAOD,UAAP,KAAsB,QAA1B,EAAoC;AAClCC,WAAO,GAAGC,MAAM,CAACC,IAAP,CAAYH,UAAZ,EAAwB,KAAxB,CAAV;AACD,GAFD,MAEO;AACLC,WAAO,GAAGD,UAAV;AACD,GAND,CAOA;;;AAEA,MAAMI,CAAC,GAAG,IAAIC,UAAJ,CAAe,EAAf,CAAV;AACA,MAAMC,CAAC,GAAG,CAACV,CAAC,CAACW,EAAF,EAAD,EAASX,CAAC,CAACW,EAAF,EAAT,EAAiBX,CAAC,CAACW,EAAF,EAAjB,EAAyBX,CAAC,CAACW,EAAF,EAAzB,CAAV;AACA,MAAMC,EAAE,GAAG,IAAIH,UAAJ,uCAAmB,IAAIA,UAAJ,CAAeJ,OAAf,CAAnB,+BAA+C,IAAII,UAAJ,CAAe,EAAf,CAA/C,GAAX;AACA,MAAMI,EAAE,GAAG,IAAIJ,UAAJ,CAAe,EAAf,CAAX;AACAT,GAAC,CAACc,WAAF,CAAcN,CAAd,EAAiBI,EAAjB,EAAqB,EAArB,EAbA,CAcA;;AACAJ,GAAC,CAAC,CAAD,CAAD,IAAQ,GAAR,CAfA,CAgBA;;AACAA,GAAC,CAAC,EAAD,CAAD,IAAS,GAAT,CAjBA,CAkBA;;AACAA,GAAC,CAAC,EAAD,CAAD,IAAS,EAAT;AACAR,GAAC,CAACe,UAAF,CAAaL,CAAb,EAAgBF,CAAhB;AACAR,GAAC,CAACgB,IAAF,CAAOH,EAAP,EAAWH,CAAX;;AACA,OAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,IAAI,CAA7B;AAAgCL,MAAE,CAACK,CAAC,GAAG,EAAL,CAAF,GAAaJ,EAAE,CAACI,CAAD,CAAf;AAAhC;;AAEA,SAAO;AAAEL,MAAE,EAAEN,MAAM,CAACC,IAAP,CAAYK,EAAZ,CAAN;AAAuBC,MAAE,EAAEP,MAAM,CAACC,IAAP,CAAYM,EAAZ;AAA3B,GAAP;AACD,C","file":"openlogin-ed25519.cjs.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = require(\"@babel/runtime/helpers/toConsumableArray\");","module.exports = require(\"@toruslabs/tweetnacl-js\");","import nacl from \"@toruslabs/tweetnacl-js\";\n\nexport type SECP256K1KeyType = \"secp256k1\";\nexport type ED25519KeyType = \"ed25519\";\n\nexport type SECP256K1Key = Buffer;\nexport type ED25519Key = Buffer;\n\nconst l = (nacl as any).lowlevel;\n\nexport function getED25519Key(privateKey: string | Buffer): {\n  sk: Buffer;\n  pk: Buffer;\n} {\n  let privKey: Buffer;\n  if (typeof privateKey === \"string\") {\n    privKey = Buffer.from(privateKey, \"hex\");\n  } else {\n    privKey = privateKey;\n  }\n  // Implementation copied from tweetnacl\n\n  const d = new Uint8Array(64);\n  const p = [l.gf(), l.gf(), l.gf(), l.gf()];\n  const sk = new Uint8Array([...new Uint8Array(privKey), ...new Uint8Array(32)]);\n  const pk = new Uint8Array(32);\n  l.crypto_hash(d, sk, 32);\n  // eslint-disable-next-line no-bitwise\n  d[0] &= 248;\n  // eslint-disable-next-line no-bitwise\n  d[31] &= 127;\n  // eslint-disable-next-line no-bitwise\n  d[31] |= 64;\n  l.scalarbase(p, d);\n  l.pack(pk, p);\n  for (let i = 0; i < 32; i += 1) sk[i + 32] = pk[i];\n\n  return { sk: Buffer.from(sk), pk: Buffer.from(pk) };\n}\n"],"sourceRoot":""}